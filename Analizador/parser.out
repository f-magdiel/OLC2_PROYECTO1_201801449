Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    CAPACITY
    CONTAINS
    INSERT
    PUSH
    REMOVE

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     inicio -> instrucciones main
Rule 3     inicio -> main instrucciones
Rule 4     inicio -> main
Rule 5     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 6     instrucciones -> instrucciones instruccion
Rule 7     instrucciones -> instruccion
Rule 8     instruccion -> declaracion
Rule 9     instruccion -> imprimir
Rule 10    instruccion -> asignacion
Rule 11    instruccion -> if
Rule 12    instruccion -> match
Rule 13    instruccion -> loop
Rule 14    instruccion -> while
Rule 15    instruccion -> break
Rule 16    instruccion -> return
Rule 17    instruccion -> continue
Rule 18    instruccion -> funciones
Rule 19    instruccion -> llamada_funciones PTCOMA
Rule 20    instruccion -> declaracion_arreglos
Rule 21    instruccion -> declaracion_vector
Rule 22    instruccion -> forin
Rule 23    declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
Rule 24    declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
Rule 25    expresion -> VEC NOT CORIZQ expresiones CORDER
Rule 26    expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER
Rule 27    expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
Rule 28    expresion -> nativas_vec
Rule 29    nativas_vec -> ID PTO LEN PARIZQ PARDER
Rule 30    declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
Rule 31    tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER
Rule 32    tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER
Rule 33    funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 34    funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 35    funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 36    funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 37    lparametros -> lparametros COMA lparame
Rule 38    lparametros -> lparame
Rule 39    lparame -> ID DOSPT tipo
Rule 40    lparame -> ID DOSPT SIGNOI MUT tipo_arreglo
Rule 41    llamada_funciones -> ID PARIZQ largumentos PARDER
Rule 42    llamada_funciones -> ID PARIZQ PARDER
Rule 43    largumentos -> largumentos COMA largumento
Rule 44    largumentos -> largumento
Rule 45    largumento -> expresion
Rule 46    largumento -> SIGNOI MUT expresion
Rule 47    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 48    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 49    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 50    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 51    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 52    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 53    asignacion -> ID IGUAL expresion PTCOMA
Rule 54    asignacion -> ID lindices IGUAL expresion PTCOMA
Rule 55    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 56    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 57    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 58    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 59    lelseif -> lelseif elseif
Rule 60    lelseif -> elseif
Rule 61    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 62    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 63    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 64    imatch -> opmatch COMA dmatch
Rule 65    opmatch -> opmatch COMA cmatch
Rule 66    opmatch -> opmatch COMA rmatch
Rule 67    opmatch -> cmatch
Rule 68    opmatch -> rmatch
Rule 69    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 70    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 71    bloque_match -> bloque_match BARRAS expresion
Rule 72    bloque_match -> expresion
Rule 73    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 74    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 75    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 76    rrmatch -> instruccion
Rule 77    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 78    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 79    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 80    forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
Rule 81    forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
Rule 82    break -> BREAK PTCOMA
Rule 83    break -> BREAK expresion PTCOMA
Rule 84    continue -> CONTINUE PTCOMA
Rule 85    return -> RETURN expresion PTCOMA
Rule 86    tipo -> I64
Rule 87    tipo -> F64
Rule 88    tipo -> BOOL
Rule 89    tipo -> CHAR
Rule 90    tipo -> STRING
Rule 91    tipo -> USIZE
Rule 92    tipo -> SIGNOI STR
Rule 93    expresiones -> expresiones COMA expresion
Rule 94    expresiones -> expresion
Rule 95    expresion -> ID
Rule 96    expresion -> ENTERO
Rule 97    expresion -> DECIMAL
Rule 98    expresion -> TRUE
Rule 99    expresion -> FALSE
Rule 100   expresion -> tostring
Rule 101   expresion -> toowned
Rule 102   tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 103   toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 104   expresion -> STR
Rule 105   expresion -> CADENA
Rule 106   expresion -> CARACTER
Rule 107   expresion -> expresion MAS expresion
Rule 108   expresion -> expresion MENOS expresion
Rule 109   expresion -> expresion POR expresion
Rule 110   expresion -> expresion DIVIDIDO expresion
Rule 111   expresion -> expresion MODULO expresion
Rule 112   expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 113   expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 114   expresion -> expresion IGUALQUE expresion
Rule 115   expresion -> expresion NOIGUALQUE expresion
Rule 116   expresion -> expresion MENORQUE expresion
Rule 117   expresion -> expresion MAYORQUE expresion
Rule 118   expresion -> expresion MENORIQUE expresion
Rule 119   expresion -> expresion MAYORIQUE expresion
Rule 120   expresion -> expresion OR expresion
Rule 121   expresion -> expresion AND expresion
Rule 122   expresion -> MENOS expresion
Rule 123   expresion -> NOT expresion
Rule 124   expresion -> PARIZQ expresion PARDER
Rule 125   expresion -> llamada_funciones
Rule 126   expresion -> CORIZQ expresiones CORDER
Rule 127   expresion -> ID lindices
Rule 128   lindices -> lindices CORIZQ expresion CORDER
Rule 129   lindices -> CORIZQ expresion CORDER
Rule 130   expresion -> if_asig
Rule 131   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 132   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
Rule 133   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
Rule 134   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
Rule 135   elseifa -> elseifa lif
Rule 136   elseifa -> lif
Rule 137   lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 138   elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 139   bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 140   bloque_expresion -> expresion
Rule 141   expresion -> match_asig
Rule 142   match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 143   imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 144   dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 145   dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 146   opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 147   opmatch_asig -> cmatch_asig
Rule 148   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 149   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 150   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 151   bloque_match_asig -> expresion
Rule 152   expresion -> loop_asig
Rule 153   loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER

Terminals, with rules where they appear

AND                  : 121
AS                   : 
BARRAS               : 71 150
BOOL                 : 88
BREAK                : 82 83
CADENA               : 102 103 105
CAPACITY             : 
CARACTER             : 106
CHAR                 : 89
COMA                 : 37 43 47 64 65 66 93 112 113 143 146
CONTAINS             : 
CONTINUE             : 84
CORDER               : 25 31 32 126 128 129
CORIZQ               : 25 31 32 126 128 129
DECIMAL              : 97
DIVIDIDO             : 110
DOSPT                : 23 24 26 26 27 27 30 39 40 49 51 112 112 113 113
ELSE                 : 61 62 137 138
ENTERO               : 96
F64                  : 87
FALSE                : 99
FN                   : 5 33 34 35 36
FOR                  : 80 81
GUIONB               : 73 74 144 145
I64                  : 86
ID                   : 23 24 29 30 33 34 35 36 39 40 41 42 49 50 51 52 53 54 80 81 95 127
IF                   : 55 56 57 58 61 131 132 133 134 137
IGUAL                : 23 24 30 49 50 51 52 53 54 69 70 73 74 75 75 144 145 148 149
IGUALQUE             : 114
IN                   : 80 81
INSERT               : 
LEN                  : 29
LET                  : 23 24 30 49 50 51 52
LLAVEDER             : 5 33 34 35 36 55 56 57 58 61 62 63 69 73 77 78 79 80 81 131 132 133 134 137 138 142 144 148 153
LLAVEIZQ             : 5 33 34 35 36 55 56 57 58 61 62 63 69 73 77 78 79 80 81 131 132 133 134 137 138 142 144 148 153
LOOP                 : 78 153
MAIN                 : 5
MAS                  : 107
MATCH                : 63 142
MAYORIQUE            : 119
MAYORQUE             : 23 24 33 34 69 70 73 74 75 117 144 145 148 149
MENORIQUE            : 118
MENORQUE             : 23 24 116
MENOS                : 33 34 108 122
MODULO               : 111
MUT                  : 23 30 40 46 49 50
NEW                  : 26
NOIGUALQUE           : 115
NOT                  : 25 47 48 123
OR                   : 120
PARDER               : 5 26 27 29 33 34 35 36 41 42 47 48 102 103 112 113 124
PARIZQ               : 5 26 27 29 33 34 35 36 41 42 47 48 102 103 112 113 124
POR                  : 109
POW                  : 112
POWF                 : 113
PRINTLN              : 47 48
PTCOMA               : 19 23 24 30 31 32 47 48 49 50 51 52 53 54 82 83 84 85 139
PTO                  : 29 75 75 81 81 102 103
PUSH                 : 
REMOVE               : 
RETURN               : 85
SIGNOI               : 40 46 92
STR                  : 92 104
STRING               : 90
TOOWNED              : 103
TOSTRING             : 102
TRUE                 : 98
USIZE                : 91
VEC                  : 25
VVEC                 : 23 24 26 27
WHILE                : 79
WITH_CAPACITY        : 27
error                : 

Nonterminals, with rules where they appear

asignacion           : 10
bloque_expresion     : 131 132 133 134 137 138 139 144 148
bloque_match         : 69 70 71
bloque_match_asig    : 148 149 150
break                : 15
cmatch               : 65 67
cmatch_asig          : 146 147
continue             : 17
declaracion          : 8
declaracion_arreglos : 20
declaracion_vector   : 21
dmatch               : 64
dmatch_asig          : 143
else                 : 56 58
elsea                : 132 134
elseif               : 59 60
elseifa              : 133 134 135
expresion            : 23 24 27 30 31 32 45 46 47 48 49 50 51 52 53 54 55 56 57 58 61 63 71 72 75 75 79 80 81 81 83 85 93 94 107 107 108 108 109 109 110 110 111 111 112 112 113 113 114 114 115 115 116 116 117 117 118 118 119 119 120 120 121 121 122 123 124 128 129 131 132 133 134 137 139 140 142 145 149 150 151
expresiones          : 25 47 93 126
forin                : 22
funciones            : 18
if                   : 11
if_asig              : 130
imatch               : 63
imatch_asig          : 142
imprimir             : 9
inicio               : 0
instruccion          : 6 7 70 74 76
instrucciones        : 1 1 2 3 5 6 33 34 35 36 55 56 57 58 61 62 69 73 77 78 79 80 81 153
largumento           : 43 44
largumentos          : 41 43
lelseif              : 57 58 59
lif                  : 135 136
lindices             : 54 127 128
llamada_funciones    : 19 125
loop                 : 13
loop_asig            : 152
lparame              : 37 38
lparametros          : 33 35 37
main                 : 1 2 3 4
match                : 12
match_asig           : 141
nativas_vec          : 28
opmatch              : 64 65 66
opmatch_asig         : 143 146
return               : 16
rmatch               : 66 68
rrmatch              : 75
tipo                 : 23 24 32 33 34 39 49 51 112 113
tipo_arreglo         : 30 31 40
toowned              : 101
tostring             : 100
while                : 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (2) inicio -> . instrucciones main
    (3) inicio -> . main instrucciones
    (4) inicio -> . main
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    FN              shift and go to state 5
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FOR             shift and go to state 31

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (2) inicio -> instrucciones . main
    (6) instrucciones -> instrucciones . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    FN              shift and go to state 5
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FOR             shift and go to state 31

    main                           shift and go to state 32
    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 3

    (3) inicio -> main . instrucciones
    (4) inicio -> main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    $end            reduce using rule 4 (inicio -> main .)
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 34
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 4

    (7) instrucciones -> instruccion .

    FN              reduce using rule 7 (instrucciones -> instruccion .)
    LET             reduce using rule 7 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 7 (instrucciones -> instruccion .)
    ID              reduce using rule 7 (instrucciones -> instruccion .)
    IF              reduce using rule 7 (instrucciones -> instruccion .)
    MATCH           reduce using rule 7 (instrucciones -> instruccion .)
    LOOP            reduce using rule 7 (instrucciones -> instruccion .)
    WHILE           reduce using rule 7 (instrucciones -> instruccion .)
    BREAK           reduce using rule 7 (instrucciones -> instruccion .)
    RETURN          reduce using rule 7 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 7 (instrucciones -> instruccion .)
    FOR             reduce using rule 7 (instrucciones -> instruccion .)
    $end            reduce using rule 7 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 7 (instrucciones -> instruccion .)


state 5

    (5) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 36
    ID              shift and go to state 37


state 6

    (8) instruccion -> declaracion .

    FN              reduce using rule 8 (instruccion -> declaracion .)
    LET             reduce using rule 8 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 8 (instruccion -> declaracion .)
    ID              reduce using rule 8 (instruccion -> declaracion .)
    IF              reduce using rule 8 (instruccion -> declaracion .)
    MATCH           reduce using rule 8 (instruccion -> declaracion .)
    LOOP            reduce using rule 8 (instruccion -> declaracion .)
    WHILE           reduce using rule 8 (instruccion -> declaracion .)
    BREAK           reduce using rule 8 (instruccion -> declaracion .)
    RETURN          reduce using rule 8 (instruccion -> declaracion .)
    CONTINUE        reduce using rule 8 (instruccion -> declaracion .)
    FOR             reduce using rule 8 (instruccion -> declaracion .)
    $end            reduce using rule 8 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 8 (instruccion -> declaracion .)
    COMA            reduce using rule 8 (instruccion -> declaracion .)


state 7

    (9) instruccion -> imprimir .

    FN              reduce using rule 9 (instruccion -> imprimir .)
    LET             reduce using rule 9 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 9 (instruccion -> imprimir .)
    ID              reduce using rule 9 (instruccion -> imprimir .)
    IF              reduce using rule 9 (instruccion -> imprimir .)
    MATCH           reduce using rule 9 (instruccion -> imprimir .)
    LOOP            reduce using rule 9 (instruccion -> imprimir .)
    WHILE           reduce using rule 9 (instruccion -> imprimir .)
    BREAK           reduce using rule 9 (instruccion -> imprimir .)
    RETURN          reduce using rule 9 (instruccion -> imprimir .)
    CONTINUE        reduce using rule 9 (instruccion -> imprimir .)
    FOR             reduce using rule 9 (instruccion -> imprimir .)
    $end            reduce using rule 9 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 9 (instruccion -> imprimir .)
    COMA            reduce using rule 9 (instruccion -> imprimir .)


state 8

    (10) instruccion -> asignacion .

    FN              reduce using rule 10 (instruccion -> asignacion .)
    LET             reduce using rule 10 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 10 (instruccion -> asignacion .)
    ID              reduce using rule 10 (instruccion -> asignacion .)
    IF              reduce using rule 10 (instruccion -> asignacion .)
    MATCH           reduce using rule 10 (instruccion -> asignacion .)
    LOOP            reduce using rule 10 (instruccion -> asignacion .)
    WHILE           reduce using rule 10 (instruccion -> asignacion .)
    BREAK           reduce using rule 10 (instruccion -> asignacion .)
    RETURN          reduce using rule 10 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 10 (instruccion -> asignacion .)
    FOR             reduce using rule 10 (instruccion -> asignacion .)
    $end            reduce using rule 10 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 10 (instruccion -> asignacion .)
    COMA            reduce using rule 10 (instruccion -> asignacion .)


state 9

    (11) instruccion -> if .

    FN              reduce using rule 11 (instruccion -> if .)
    LET             reduce using rule 11 (instruccion -> if .)
    PRINTLN         reduce using rule 11 (instruccion -> if .)
    ID              reduce using rule 11 (instruccion -> if .)
    IF              reduce using rule 11 (instruccion -> if .)
    MATCH           reduce using rule 11 (instruccion -> if .)
    LOOP            reduce using rule 11 (instruccion -> if .)
    WHILE           reduce using rule 11 (instruccion -> if .)
    BREAK           reduce using rule 11 (instruccion -> if .)
    RETURN          reduce using rule 11 (instruccion -> if .)
    CONTINUE        reduce using rule 11 (instruccion -> if .)
    FOR             reduce using rule 11 (instruccion -> if .)
    $end            reduce using rule 11 (instruccion -> if .)
    LLAVEDER        reduce using rule 11 (instruccion -> if .)
    COMA            reduce using rule 11 (instruccion -> if .)


state 10

    (12) instruccion -> match .

    FN              reduce using rule 12 (instruccion -> match .)
    LET             reduce using rule 12 (instruccion -> match .)
    PRINTLN         reduce using rule 12 (instruccion -> match .)
    ID              reduce using rule 12 (instruccion -> match .)
    IF              reduce using rule 12 (instruccion -> match .)
    MATCH           reduce using rule 12 (instruccion -> match .)
    LOOP            reduce using rule 12 (instruccion -> match .)
    WHILE           reduce using rule 12 (instruccion -> match .)
    BREAK           reduce using rule 12 (instruccion -> match .)
    RETURN          reduce using rule 12 (instruccion -> match .)
    CONTINUE        reduce using rule 12 (instruccion -> match .)
    FOR             reduce using rule 12 (instruccion -> match .)
    $end            reduce using rule 12 (instruccion -> match .)
    LLAVEDER        reduce using rule 12 (instruccion -> match .)
    COMA            reduce using rule 12 (instruccion -> match .)


state 11

    (13) instruccion -> loop .

    FN              reduce using rule 13 (instruccion -> loop .)
    LET             reduce using rule 13 (instruccion -> loop .)
    PRINTLN         reduce using rule 13 (instruccion -> loop .)
    ID              reduce using rule 13 (instruccion -> loop .)
    IF              reduce using rule 13 (instruccion -> loop .)
    MATCH           reduce using rule 13 (instruccion -> loop .)
    LOOP            reduce using rule 13 (instruccion -> loop .)
    WHILE           reduce using rule 13 (instruccion -> loop .)
    BREAK           reduce using rule 13 (instruccion -> loop .)
    RETURN          reduce using rule 13 (instruccion -> loop .)
    CONTINUE        reduce using rule 13 (instruccion -> loop .)
    FOR             reduce using rule 13 (instruccion -> loop .)
    $end            reduce using rule 13 (instruccion -> loop .)
    LLAVEDER        reduce using rule 13 (instruccion -> loop .)
    COMA            reduce using rule 13 (instruccion -> loop .)


state 12

    (14) instruccion -> while .

    FN              reduce using rule 14 (instruccion -> while .)
    LET             reduce using rule 14 (instruccion -> while .)
    PRINTLN         reduce using rule 14 (instruccion -> while .)
    ID              reduce using rule 14 (instruccion -> while .)
    IF              reduce using rule 14 (instruccion -> while .)
    MATCH           reduce using rule 14 (instruccion -> while .)
    LOOP            reduce using rule 14 (instruccion -> while .)
    WHILE           reduce using rule 14 (instruccion -> while .)
    BREAK           reduce using rule 14 (instruccion -> while .)
    RETURN          reduce using rule 14 (instruccion -> while .)
    CONTINUE        reduce using rule 14 (instruccion -> while .)
    FOR             reduce using rule 14 (instruccion -> while .)
    $end            reduce using rule 14 (instruccion -> while .)
    LLAVEDER        reduce using rule 14 (instruccion -> while .)
    COMA            reduce using rule 14 (instruccion -> while .)


state 13

    (15) instruccion -> break .

    FN              reduce using rule 15 (instruccion -> break .)
    LET             reduce using rule 15 (instruccion -> break .)
    PRINTLN         reduce using rule 15 (instruccion -> break .)
    ID              reduce using rule 15 (instruccion -> break .)
    IF              reduce using rule 15 (instruccion -> break .)
    MATCH           reduce using rule 15 (instruccion -> break .)
    LOOP            reduce using rule 15 (instruccion -> break .)
    WHILE           reduce using rule 15 (instruccion -> break .)
    BREAK           reduce using rule 15 (instruccion -> break .)
    RETURN          reduce using rule 15 (instruccion -> break .)
    CONTINUE        reduce using rule 15 (instruccion -> break .)
    FOR             reduce using rule 15 (instruccion -> break .)
    $end            reduce using rule 15 (instruccion -> break .)
    LLAVEDER        reduce using rule 15 (instruccion -> break .)
    COMA            reduce using rule 15 (instruccion -> break .)


state 14

    (16) instruccion -> return .

    FN              reduce using rule 16 (instruccion -> return .)
    LET             reduce using rule 16 (instruccion -> return .)
    PRINTLN         reduce using rule 16 (instruccion -> return .)
    ID              reduce using rule 16 (instruccion -> return .)
    IF              reduce using rule 16 (instruccion -> return .)
    MATCH           reduce using rule 16 (instruccion -> return .)
    LOOP            reduce using rule 16 (instruccion -> return .)
    WHILE           reduce using rule 16 (instruccion -> return .)
    BREAK           reduce using rule 16 (instruccion -> return .)
    RETURN          reduce using rule 16 (instruccion -> return .)
    CONTINUE        reduce using rule 16 (instruccion -> return .)
    FOR             reduce using rule 16 (instruccion -> return .)
    $end            reduce using rule 16 (instruccion -> return .)
    LLAVEDER        reduce using rule 16 (instruccion -> return .)
    COMA            reduce using rule 16 (instruccion -> return .)


state 15

    (17) instruccion -> continue .

    FN              reduce using rule 17 (instruccion -> continue .)
    LET             reduce using rule 17 (instruccion -> continue .)
    PRINTLN         reduce using rule 17 (instruccion -> continue .)
    ID              reduce using rule 17 (instruccion -> continue .)
    IF              reduce using rule 17 (instruccion -> continue .)
    MATCH           reduce using rule 17 (instruccion -> continue .)
    LOOP            reduce using rule 17 (instruccion -> continue .)
    WHILE           reduce using rule 17 (instruccion -> continue .)
    BREAK           reduce using rule 17 (instruccion -> continue .)
    RETURN          reduce using rule 17 (instruccion -> continue .)
    CONTINUE        reduce using rule 17 (instruccion -> continue .)
    FOR             reduce using rule 17 (instruccion -> continue .)
    $end            reduce using rule 17 (instruccion -> continue .)
    LLAVEDER        reduce using rule 17 (instruccion -> continue .)
    COMA            reduce using rule 17 (instruccion -> continue .)


state 16

    (18) instruccion -> funciones .

    FN              reduce using rule 18 (instruccion -> funciones .)
    LET             reduce using rule 18 (instruccion -> funciones .)
    PRINTLN         reduce using rule 18 (instruccion -> funciones .)
    ID              reduce using rule 18 (instruccion -> funciones .)
    IF              reduce using rule 18 (instruccion -> funciones .)
    MATCH           reduce using rule 18 (instruccion -> funciones .)
    LOOP            reduce using rule 18 (instruccion -> funciones .)
    WHILE           reduce using rule 18 (instruccion -> funciones .)
    BREAK           reduce using rule 18 (instruccion -> funciones .)
    RETURN          reduce using rule 18 (instruccion -> funciones .)
    CONTINUE        reduce using rule 18 (instruccion -> funciones .)
    FOR             reduce using rule 18 (instruccion -> funciones .)
    $end            reduce using rule 18 (instruccion -> funciones .)
    LLAVEDER        reduce using rule 18 (instruccion -> funciones .)
    COMA            reduce using rule 18 (instruccion -> funciones .)


state 17

    (19) instruccion -> llamada_funciones . PTCOMA

    PTCOMA          shift and go to state 38


state 18

    (20) instruccion -> declaracion_arreglos .

    FN              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LET             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    PRINTLN         reduce using rule 20 (instruccion -> declaracion_arreglos .)
    ID              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    IF              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    MATCH           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LOOP            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    WHILE           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    BREAK           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    RETURN          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CONTINUE        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    FOR             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    $end            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LLAVEDER        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    COMA            reduce using rule 20 (instruccion -> declaracion_arreglos .)


state 19

    (21) instruccion -> declaracion_vector .

    FN              reduce using rule 21 (instruccion -> declaracion_vector .)
    LET             reduce using rule 21 (instruccion -> declaracion_vector .)
    PRINTLN         reduce using rule 21 (instruccion -> declaracion_vector .)
    ID              reduce using rule 21 (instruccion -> declaracion_vector .)
    IF              reduce using rule 21 (instruccion -> declaracion_vector .)
    MATCH           reduce using rule 21 (instruccion -> declaracion_vector .)
    LOOP            reduce using rule 21 (instruccion -> declaracion_vector .)
    WHILE           reduce using rule 21 (instruccion -> declaracion_vector .)
    BREAK           reduce using rule 21 (instruccion -> declaracion_vector .)
    RETURN          reduce using rule 21 (instruccion -> declaracion_vector .)
    CONTINUE        reduce using rule 21 (instruccion -> declaracion_vector .)
    FOR             reduce using rule 21 (instruccion -> declaracion_vector .)
    $end            reduce using rule 21 (instruccion -> declaracion_vector .)
    LLAVEDER        reduce using rule 21 (instruccion -> declaracion_vector .)
    COMA            reduce using rule 21 (instruccion -> declaracion_vector .)


state 20

    (22) instruccion -> forin .

    FN              reduce using rule 22 (instruccion -> forin .)
    LET             reduce using rule 22 (instruccion -> forin .)
    PRINTLN         reduce using rule 22 (instruccion -> forin .)
    ID              reduce using rule 22 (instruccion -> forin .)
    IF              reduce using rule 22 (instruccion -> forin .)
    MATCH           reduce using rule 22 (instruccion -> forin .)
    LOOP            reduce using rule 22 (instruccion -> forin .)
    WHILE           reduce using rule 22 (instruccion -> forin .)
    BREAK           reduce using rule 22 (instruccion -> forin .)
    RETURN          reduce using rule 22 (instruccion -> forin .)
    CONTINUE        reduce using rule 22 (instruccion -> forin .)
    FOR             reduce using rule 22 (instruccion -> forin .)
    $end            reduce using rule 22 (instruccion -> forin .)
    LLAVEDER        reduce using rule 22 (instruccion -> forin .)
    COMA            reduce using rule 22 (instruccion -> forin .)


state 21

    (49) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> LET . ID IGUAL expresion PTCOMA
    (30) declaracion_arreglos -> LET . MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> LET . MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET . ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    MUT             shift and go to state 39
    ID              shift and go to state 40


state 22

    (53) asignacion -> ID . IGUAL expresion PTCOMA
    (54) asignacion -> ID . lindices IGUAL expresion PTCOMA
    (41) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (42) llamada_funciones -> ID . PARIZQ PARDER
    (128) lindices -> . lindices CORIZQ expresion CORDER
    (129) lindices -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 41
    PARIZQ          shift and go to state 43
    CORIZQ          shift and go to state 44

    lindices                       shift and go to state 42

state 23

    (47) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 45


state 24

    (55) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 47
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 25

    (63) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 79
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 26

    (78) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 80


state 27

    (79) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 81
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 28

    (82) break -> BREAK . PTCOMA
    (83) break -> BREAK . expresion PTCOMA
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 82
    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 83
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 29

    (85) return -> RETURN . expresion PTCOMA
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 84
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 30

    (84) continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 85


state 31

    (80) forin -> FOR . ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> FOR . ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 86


state 32

    (1) inicio -> instrucciones main . instrucciones
    (2) inicio -> instrucciones main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    $end            reduce using rule 2 (inicio -> instrucciones main .)
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 87
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 33

    (6) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 6 (instrucciones -> instrucciones instruccion .)


state 34

    (3) inicio -> main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    $end            reduce using rule 3 (inicio -> main instrucciones .)
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 35

    (33) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 37


state 36

    (5) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 88


state 37

    (33) funciones -> FN ID . PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> FN ID . PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> FN ID . PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> FN ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 89


state 38

    (19) instruccion -> llamada_funciones PTCOMA .

    FN              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LET             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    PRINTLN         reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    ID              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    IF              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    MATCH           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LOOP            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    WHILE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    BREAK           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    RETURN          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    FOR             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    $end            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LLAVEDER        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    COMA            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)


state 39

    (49) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> LET MUT . ID IGUAL expresion PTCOMA
    (30) declaracion_arreglos -> LET MUT . ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> LET MUT . ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    ID              shift and go to state 90


state 40

    (51) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> LET ID . IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET ID . DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    DOSPT           shift and go to state 91
    IGUAL           shift and go to state 92


state 41

    (53) asignacion -> ID IGUAL . expresion PTCOMA
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 93
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 42

    (54) asignacion -> ID lindices . IGUAL expresion PTCOMA
    (128) lindices -> lindices . CORIZQ expresion CORDER

    IGUAL           shift and go to state 94
    CORIZQ          shift and go to state 95


state 43

    (41) llamada_funciones -> ID PARIZQ . largumentos PARDER
    (42) llamada_funciones -> ID PARIZQ . PARDER
    (43) largumentos -> . largumentos COMA largumento
    (44) largumentos -> . largumento
    (45) largumento -> . expresion
    (46) largumento -> . SIGNOI MUT expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 97
    SIGNOI          shift and go to state 100
    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    largumentos                    shift and go to state 96
    largumento                     shift and go to state 98
    expresion                      shift and go to state 99
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 44

    (129) lindices -> CORIZQ . expresion CORDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 101
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 45

    (47) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 102


state 46

    (131) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 103
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 47

    (55) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (56) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 104
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 48

    (25) expresion -> VEC . NOT CORIZQ expresiones CORDER

    NOT             shift and go to state 118


state 49

    (123) expresion -> NOT . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 119
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 50

    (126) expresion -> CORIZQ . expresiones CORDER
    (93) expresiones -> . expresiones COMA expresion
    (94) expresiones -> . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresiones                    shift and go to state 120
    expresion                      shift and go to state 121
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 51

    (26) expresion -> VVEC . DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> VVEC . DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER

    DOSPT           shift and go to state 122


state 52

    (124) expresion -> PARIZQ . expresion PARDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 123
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 53

    (28) expresion -> nativas_vec .

    LLAVEIZQ        reduce using rule 28 (expresion -> nativas_vec .)
    MAS             reduce using rule 28 (expresion -> nativas_vec .)
    MENOS           reduce using rule 28 (expresion -> nativas_vec .)
    POR             reduce using rule 28 (expresion -> nativas_vec .)
    DIVIDIDO        reduce using rule 28 (expresion -> nativas_vec .)
    MODULO          reduce using rule 28 (expresion -> nativas_vec .)
    IGUALQUE        reduce using rule 28 (expresion -> nativas_vec .)
    NOIGUALQUE      reduce using rule 28 (expresion -> nativas_vec .)
    MENORQUE        reduce using rule 28 (expresion -> nativas_vec .)
    MAYORQUE        reduce using rule 28 (expresion -> nativas_vec .)
    MENORIQUE       reduce using rule 28 (expresion -> nativas_vec .)
    MAYORIQUE       reduce using rule 28 (expresion -> nativas_vec .)
    OR              reduce using rule 28 (expresion -> nativas_vec .)
    AND             reduce using rule 28 (expresion -> nativas_vec .)
    PTCOMA          reduce using rule 28 (expresion -> nativas_vec .)
    PARDER          reduce using rule 28 (expresion -> nativas_vec .)
    COMA            reduce using rule 28 (expresion -> nativas_vec .)
    CORDER          reduce using rule 28 (expresion -> nativas_vec .)
    PTO             reduce using rule 28 (expresion -> nativas_vec .)
    IGUAL           reduce using rule 28 (expresion -> nativas_vec .)
    BARRAS          reduce using rule 28 (expresion -> nativas_vec .)
    LLAVEDER        reduce using rule 28 (expresion -> nativas_vec .)


state 54

    (95) expresion -> ID .
    (127) expresion -> ID . lindices
    (29) nativas_vec -> ID . PTO LEN PARIZQ PARDER
    (41) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (42) llamada_funciones -> ID . PARIZQ PARDER
    (128) lindices -> . lindices CORIZQ expresion CORDER
    (129) lindices -> . CORIZQ expresion CORDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 95 (expresion -> ID .)
    MAS             reduce using rule 95 (expresion -> ID .)
    MENOS           reduce using rule 95 (expresion -> ID .)
    POR             reduce using rule 95 (expresion -> ID .)
    DIVIDIDO        reduce using rule 95 (expresion -> ID .)
    MODULO          reduce using rule 95 (expresion -> ID .)
    IGUALQUE        reduce using rule 95 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 95 (expresion -> ID .)
    MENORQUE        reduce using rule 95 (expresion -> ID .)
    MAYORQUE        reduce using rule 95 (expresion -> ID .)
    MENORIQUE       reduce using rule 95 (expresion -> ID .)
    MAYORIQUE       reduce using rule 95 (expresion -> ID .)
    OR              reduce using rule 95 (expresion -> ID .)
    AND             reduce using rule 95 (expresion -> ID .)
    PTCOMA          reduce using rule 95 (expresion -> ID .)
    PARDER          reduce using rule 95 (expresion -> ID .)
    COMA            reduce using rule 95 (expresion -> ID .)
    CORDER          reduce using rule 95 (expresion -> ID .)
    IGUAL           reduce using rule 95 (expresion -> ID .)
    BARRAS          reduce using rule 95 (expresion -> ID .)
    LLAVEDER        reduce using rule 95 (expresion -> ID .)
    PTO             shift and go to state 125
    PARIZQ          shift and go to state 43
    CORIZQ          shift and go to state 44

  ! PTO             [ reduce using rule 95 (expresion -> ID .) ]

    lindices                       shift and go to state 124

state 55

    (96) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 96 (expresion -> ENTERO .)
    MAS             reduce using rule 96 (expresion -> ENTERO .)
    MENOS           reduce using rule 96 (expresion -> ENTERO .)
    POR             reduce using rule 96 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 96 (expresion -> ENTERO .)
    MODULO          reduce using rule 96 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 96 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 96 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 96 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 96 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 96 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 96 (expresion -> ENTERO .)
    OR              reduce using rule 96 (expresion -> ENTERO .)
    AND             reduce using rule 96 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 96 (expresion -> ENTERO .)
    PARDER          reduce using rule 96 (expresion -> ENTERO .)
    COMA            reduce using rule 96 (expresion -> ENTERO .)
    CORDER          reduce using rule 96 (expresion -> ENTERO .)
    PTO             reduce using rule 96 (expresion -> ENTERO .)
    IGUAL           reduce using rule 96 (expresion -> ENTERO .)
    BARRAS          reduce using rule 96 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 96 (expresion -> ENTERO .)


state 56

    (97) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 97 (expresion -> DECIMAL .)
    MAS             reduce using rule 97 (expresion -> DECIMAL .)
    MENOS           reduce using rule 97 (expresion -> DECIMAL .)
    POR             reduce using rule 97 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 97 (expresion -> DECIMAL .)
    MODULO          reduce using rule 97 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 97 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 97 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 97 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 97 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 97 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 97 (expresion -> DECIMAL .)
    OR              reduce using rule 97 (expresion -> DECIMAL .)
    AND             reduce using rule 97 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 97 (expresion -> DECIMAL .)
    PARDER          reduce using rule 97 (expresion -> DECIMAL .)
    COMA            reduce using rule 97 (expresion -> DECIMAL .)
    CORDER          reduce using rule 97 (expresion -> DECIMAL .)
    PTO             reduce using rule 97 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 97 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 97 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 97 (expresion -> DECIMAL .)


state 57

    (98) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 98 (expresion -> TRUE .)
    MAS             reduce using rule 98 (expresion -> TRUE .)
    MENOS           reduce using rule 98 (expresion -> TRUE .)
    POR             reduce using rule 98 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 98 (expresion -> TRUE .)
    MODULO          reduce using rule 98 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 98 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 98 (expresion -> TRUE .)
    MENORQUE        reduce using rule 98 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 98 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 98 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 98 (expresion -> TRUE .)
    OR              reduce using rule 98 (expresion -> TRUE .)
    AND             reduce using rule 98 (expresion -> TRUE .)
    PTCOMA          reduce using rule 98 (expresion -> TRUE .)
    PARDER          reduce using rule 98 (expresion -> TRUE .)
    COMA            reduce using rule 98 (expresion -> TRUE .)
    CORDER          reduce using rule 98 (expresion -> TRUE .)
    PTO             reduce using rule 98 (expresion -> TRUE .)
    IGUAL           reduce using rule 98 (expresion -> TRUE .)
    BARRAS          reduce using rule 98 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 98 (expresion -> TRUE .)


state 58

    (99) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 99 (expresion -> FALSE .)
    MAS             reduce using rule 99 (expresion -> FALSE .)
    MENOS           reduce using rule 99 (expresion -> FALSE .)
    POR             reduce using rule 99 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 99 (expresion -> FALSE .)
    MODULO          reduce using rule 99 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 99 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 99 (expresion -> FALSE .)
    MENORQUE        reduce using rule 99 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 99 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 99 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 99 (expresion -> FALSE .)
    OR              reduce using rule 99 (expresion -> FALSE .)
    AND             reduce using rule 99 (expresion -> FALSE .)
    PTCOMA          reduce using rule 99 (expresion -> FALSE .)
    PARDER          reduce using rule 99 (expresion -> FALSE .)
    COMA            reduce using rule 99 (expresion -> FALSE .)
    CORDER          reduce using rule 99 (expresion -> FALSE .)
    PTO             reduce using rule 99 (expresion -> FALSE .)
    IGUAL           reduce using rule 99 (expresion -> FALSE .)
    BARRAS          reduce using rule 99 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 99 (expresion -> FALSE .)


state 59

    (100) expresion -> tostring .

    LLAVEIZQ        reduce using rule 100 (expresion -> tostring .)
    MAS             reduce using rule 100 (expresion -> tostring .)
    MENOS           reduce using rule 100 (expresion -> tostring .)
    POR             reduce using rule 100 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 100 (expresion -> tostring .)
    MODULO          reduce using rule 100 (expresion -> tostring .)
    IGUALQUE        reduce using rule 100 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 100 (expresion -> tostring .)
    MENORQUE        reduce using rule 100 (expresion -> tostring .)
    MAYORQUE        reduce using rule 100 (expresion -> tostring .)
    MENORIQUE       reduce using rule 100 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 100 (expresion -> tostring .)
    OR              reduce using rule 100 (expresion -> tostring .)
    AND             reduce using rule 100 (expresion -> tostring .)
    PTCOMA          reduce using rule 100 (expresion -> tostring .)
    PARDER          reduce using rule 100 (expresion -> tostring .)
    COMA            reduce using rule 100 (expresion -> tostring .)
    CORDER          reduce using rule 100 (expresion -> tostring .)
    PTO             reduce using rule 100 (expresion -> tostring .)
    IGUAL           reduce using rule 100 (expresion -> tostring .)
    BARRAS          reduce using rule 100 (expresion -> tostring .)
    LLAVEDER        reduce using rule 100 (expresion -> tostring .)


state 60

    (101) expresion -> toowned .

    LLAVEIZQ        reduce using rule 101 (expresion -> toowned .)
    MAS             reduce using rule 101 (expresion -> toowned .)
    MENOS           reduce using rule 101 (expresion -> toowned .)
    POR             reduce using rule 101 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 101 (expresion -> toowned .)
    MODULO          reduce using rule 101 (expresion -> toowned .)
    IGUALQUE        reduce using rule 101 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 101 (expresion -> toowned .)
    MENORQUE        reduce using rule 101 (expresion -> toowned .)
    MAYORQUE        reduce using rule 101 (expresion -> toowned .)
    MENORIQUE       reduce using rule 101 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 101 (expresion -> toowned .)
    OR              reduce using rule 101 (expresion -> toowned .)
    AND             reduce using rule 101 (expresion -> toowned .)
    PTCOMA          reduce using rule 101 (expresion -> toowned .)
    PARDER          reduce using rule 101 (expresion -> toowned .)
    COMA            reduce using rule 101 (expresion -> toowned .)
    CORDER          reduce using rule 101 (expresion -> toowned .)
    PTO             reduce using rule 101 (expresion -> toowned .)
    IGUAL           reduce using rule 101 (expresion -> toowned .)
    BARRAS          reduce using rule 101 (expresion -> toowned .)
    LLAVEDER        reduce using rule 101 (expresion -> toowned .)


state 61

    (104) expresion -> STR .

    LLAVEIZQ        reduce using rule 104 (expresion -> STR .)
    MAS             reduce using rule 104 (expresion -> STR .)
    MENOS           reduce using rule 104 (expresion -> STR .)
    POR             reduce using rule 104 (expresion -> STR .)
    DIVIDIDO        reduce using rule 104 (expresion -> STR .)
    MODULO          reduce using rule 104 (expresion -> STR .)
    IGUALQUE        reduce using rule 104 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 104 (expresion -> STR .)
    MENORQUE        reduce using rule 104 (expresion -> STR .)
    MAYORQUE        reduce using rule 104 (expresion -> STR .)
    MENORIQUE       reduce using rule 104 (expresion -> STR .)
    MAYORIQUE       reduce using rule 104 (expresion -> STR .)
    OR              reduce using rule 104 (expresion -> STR .)
    AND             reduce using rule 104 (expresion -> STR .)
    PTCOMA          reduce using rule 104 (expresion -> STR .)
    PARDER          reduce using rule 104 (expresion -> STR .)
    COMA            reduce using rule 104 (expresion -> STR .)
    CORDER          reduce using rule 104 (expresion -> STR .)
    PTO             reduce using rule 104 (expresion -> STR .)
    IGUAL           reduce using rule 104 (expresion -> STR .)
    BARRAS          reduce using rule 104 (expresion -> STR .)
    LLAVEDER        reduce using rule 104 (expresion -> STR .)


state 62

    (105) expresion -> CADENA .
    (102) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (103) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 105 (expresion -> CADENA .)
    MAS             reduce using rule 105 (expresion -> CADENA .)
    MENOS           reduce using rule 105 (expresion -> CADENA .)
    POR             reduce using rule 105 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 105 (expresion -> CADENA .)
    MODULO          reduce using rule 105 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 105 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 105 (expresion -> CADENA .)
    MENORQUE        reduce using rule 105 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 105 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 105 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 105 (expresion -> CADENA .)
    OR              reduce using rule 105 (expresion -> CADENA .)
    AND             reduce using rule 105 (expresion -> CADENA .)
    PTCOMA          reduce using rule 105 (expresion -> CADENA .)
    PARDER          reduce using rule 105 (expresion -> CADENA .)
    COMA            reduce using rule 105 (expresion -> CADENA .)
    CORDER          reduce using rule 105 (expresion -> CADENA .)
    IGUAL           reduce using rule 105 (expresion -> CADENA .)
    BARRAS          reduce using rule 105 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 105 (expresion -> CADENA .)
    PTO             shift and go to state 126

  ! PTO             [ reduce using rule 105 (expresion -> CADENA .) ]


state 63

    (106) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 106 (expresion -> CARACTER .)
    MAS             reduce using rule 106 (expresion -> CARACTER .)
    MENOS           reduce using rule 106 (expresion -> CARACTER .)
    POR             reduce using rule 106 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 106 (expresion -> CARACTER .)
    MODULO          reduce using rule 106 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 106 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 106 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 106 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 106 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 106 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 106 (expresion -> CARACTER .)
    OR              reduce using rule 106 (expresion -> CARACTER .)
    AND             reduce using rule 106 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 106 (expresion -> CARACTER .)
    PARDER          reduce using rule 106 (expresion -> CARACTER .)
    COMA            reduce using rule 106 (expresion -> CARACTER .)
    CORDER          reduce using rule 106 (expresion -> CARACTER .)
    PTO             reduce using rule 106 (expresion -> CARACTER .)
    IGUAL           reduce using rule 106 (expresion -> CARACTER .)
    BARRAS          reduce using rule 106 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 106 (expresion -> CARACTER .)


state 64

    (122) expresion -> MENOS . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 127
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 65

    (112) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 128


state 66

    (125) expresion -> llamada_funciones .

    LLAVEIZQ        reduce using rule 125 (expresion -> llamada_funciones .)
    MAS             reduce using rule 125 (expresion -> llamada_funciones .)
    MENOS           reduce using rule 125 (expresion -> llamada_funciones .)
    POR             reduce using rule 125 (expresion -> llamada_funciones .)
    DIVIDIDO        reduce using rule 125 (expresion -> llamada_funciones .)
    MODULO          reduce using rule 125 (expresion -> llamada_funciones .)
    IGUALQUE        reduce using rule 125 (expresion -> llamada_funciones .)
    NOIGUALQUE      reduce using rule 125 (expresion -> llamada_funciones .)
    MENORQUE        reduce using rule 125 (expresion -> llamada_funciones .)
    MAYORQUE        reduce using rule 125 (expresion -> llamada_funciones .)
    MENORIQUE       reduce using rule 125 (expresion -> llamada_funciones .)
    MAYORIQUE       reduce using rule 125 (expresion -> llamada_funciones .)
    OR              reduce using rule 125 (expresion -> llamada_funciones .)
    AND             reduce using rule 125 (expresion -> llamada_funciones .)
    PTCOMA          reduce using rule 125 (expresion -> llamada_funciones .)
    PARDER          reduce using rule 125 (expresion -> llamada_funciones .)
    COMA            reduce using rule 125 (expresion -> llamada_funciones .)
    CORDER          reduce using rule 125 (expresion -> llamada_funciones .)
    PTO             reduce using rule 125 (expresion -> llamada_funciones .)
    IGUAL           reduce using rule 125 (expresion -> llamada_funciones .)
    BARRAS          reduce using rule 125 (expresion -> llamada_funciones .)
    LLAVEDER        reduce using rule 125 (expresion -> llamada_funciones .)


state 67

    (130) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 130 (expresion -> if_asig .)
    MAS             reduce using rule 130 (expresion -> if_asig .)
    MENOS           reduce using rule 130 (expresion -> if_asig .)
    POR             reduce using rule 130 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 130 (expresion -> if_asig .)
    MODULO          reduce using rule 130 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 130 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 130 (expresion -> if_asig .)
    MENORQUE        reduce using rule 130 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 130 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 130 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 130 (expresion -> if_asig .)
    OR              reduce using rule 130 (expresion -> if_asig .)
    AND             reduce using rule 130 (expresion -> if_asig .)
    PTCOMA          reduce using rule 130 (expresion -> if_asig .)
    PARDER          reduce using rule 130 (expresion -> if_asig .)
    COMA            reduce using rule 130 (expresion -> if_asig .)
    CORDER          reduce using rule 130 (expresion -> if_asig .)
    PTO             reduce using rule 130 (expresion -> if_asig .)
    IGUAL           reduce using rule 130 (expresion -> if_asig .)
    BARRAS          reduce using rule 130 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 130 (expresion -> if_asig .)


state 68

    (141) expresion -> match_asig .

    LLAVEIZQ        reduce using rule 141 (expresion -> match_asig .)
    MAS             reduce using rule 141 (expresion -> match_asig .)
    MENOS           reduce using rule 141 (expresion -> match_asig .)
    POR             reduce using rule 141 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 141 (expresion -> match_asig .)
    MODULO          reduce using rule 141 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 141 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 141 (expresion -> match_asig .)
    MENORQUE        reduce using rule 141 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 141 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 141 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 141 (expresion -> match_asig .)
    OR              reduce using rule 141 (expresion -> match_asig .)
    AND             reduce using rule 141 (expresion -> match_asig .)
    PTCOMA          reduce using rule 141 (expresion -> match_asig .)
    PARDER          reduce using rule 141 (expresion -> match_asig .)
    COMA            reduce using rule 141 (expresion -> match_asig .)
    CORDER          reduce using rule 141 (expresion -> match_asig .)
    PTO             reduce using rule 141 (expresion -> match_asig .)
    IGUAL           reduce using rule 141 (expresion -> match_asig .)
    BARRAS          reduce using rule 141 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 141 (expresion -> match_asig .)


state 69

    (152) expresion -> loop_asig .

    LLAVEIZQ        reduce using rule 152 (expresion -> loop_asig .)
    MAS             reduce using rule 152 (expresion -> loop_asig .)
    MENOS           reduce using rule 152 (expresion -> loop_asig .)
    POR             reduce using rule 152 (expresion -> loop_asig .)
    DIVIDIDO        reduce using rule 152 (expresion -> loop_asig .)
    MODULO          reduce using rule 152 (expresion -> loop_asig .)
    IGUALQUE        reduce using rule 152 (expresion -> loop_asig .)
    NOIGUALQUE      reduce using rule 152 (expresion -> loop_asig .)
    MENORQUE        reduce using rule 152 (expresion -> loop_asig .)
    MAYORQUE        reduce using rule 152 (expresion -> loop_asig .)
    MENORIQUE       reduce using rule 152 (expresion -> loop_asig .)
    MAYORIQUE       reduce using rule 152 (expresion -> loop_asig .)
    OR              reduce using rule 152 (expresion -> loop_asig .)
    AND             reduce using rule 152 (expresion -> loop_asig .)
    PTCOMA          reduce using rule 152 (expresion -> loop_asig .)
    PARDER          reduce using rule 152 (expresion -> loop_asig .)
    COMA            reduce using rule 152 (expresion -> loop_asig .)
    CORDER          reduce using rule 152 (expresion -> loop_asig .)
    PTO             reduce using rule 152 (expresion -> loop_asig .)
    IGUAL           reduce using rule 152 (expresion -> loop_asig .)
    BARRAS          reduce using rule 152 (expresion -> loop_asig .)
    LLAVEDER        reduce using rule 152 (expresion -> loop_asig .)


state 70

    (86) tipo -> I64 .

    DOSPT           reduce using rule 86 (tipo -> I64 .)
    IGUAL           reduce using rule 86 (tipo -> I64 .)
    PARDER          reduce using rule 86 (tipo -> I64 .)
    COMA            reduce using rule 86 (tipo -> I64 .)
    PTCOMA          reduce using rule 86 (tipo -> I64 .)
    MAYORQUE        reduce using rule 86 (tipo -> I64 .)
    LLAVEIZQ        reduce using rule 86 (tipo -> I64 .)


state 71

    (87) tipo -> F64 .

    DOSPT           reduce using rule 87 (tipo -> F64 .)
    IGUAL           reduce using rule 87 (tipo -> F64 .)
    PARDER          reduce using rule 87 (tipo -> F64 .)
    COMA            reduce using rule 87 (tipo -> F64 .)
    PTCOMA          reduce using rule 87 (tipo -> F64 .)
    MAYORQUE        reduce using rule 87 (tipo -> F64 .)
    LLAVEIZQ        reduce using rule 87 (tipo -> F64 .)


state 72

    (88) tipo -> BOOL .

    DOSPT           reduce using rule 88 (tipo -> BOOL .)
    IGUAL           reduce using rule 88 (tipo -> BOOL .)
    PARDER          reduce using rule 88 (tipo -> BOOL .)
    COMA            reduce using rule 88 (tipo -> BOOL .)
    PTCOMA          reduce using rule 88 (tipo -> BOOL .)
    MAYORQUE        reduce using rule 88 (tipo -> BOOL .)
    LLAVEIZQ        reduce using rule 88 (tipo -> BOOL .)


state 73

    (89) tipo -> CHAR .

    DOSPT           reduce using rule 89 (tipo -> CHAR .)
    IGUAL           reduce using rule 89 (tipo -> CHAR .)
    PARDER          reduce using rule 89 (tipo -> CHAR .)
    COMA            reduce using rule 89 (tipo -> CHAR .)
    PTCOMA          reduce using rule 89 (tipo -> CHAR .)
    MAYORQUE        reduce using rule 89 (tipo -> CHAR .)
    LLAVEIZQ        reduce using rule 89 (tipo -> CHAR .)


state 74

    (90) tipo -> STRING .

    DOSPT           reduce using rule 90 (tipo -> STRING .)
    IGUAL           reduce using rule 90 (tipo -> STRING .)
    PARDER          reduce using rule 90 (tipo -> STRING .)
    COMA            reduce using rule 90 (tipo -> STRING .)
    PTCOMA          reduce using rule 90 (tipo -> STRING .)
    MAYORQUE        reduce using rule 90 (tipo -> STRING .)
    LLAVEIZQ        reduce using rule 90 (tipo -> STRING .)


state 75

    (91) tipo -> USIZE .

    DOSPT           reduce using rule 91 (tipo -> USIZE .)
    IGUAL           reduce using rule 91 (tipo -> USIZE .)
    PARDER          reduce using rule 91 (tipo -> USIZE .)
    COMA            reduce using rule 91 (tipo -> USIZE .)
    PTCOMA          reduce using rule 91 (tipo -> USIZE .)
    MAYORQUE        reduce using rule 91 (tipo -> USIZE .)
    LLAVEIZQ        reduce using rule 91 (tipo -> USIZE .)


state 76

    (92) tipo -> SIGNOI . STR

    STR             shift and go to state 129


state 77

    (142) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 130
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 78

    (153) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 131


state 79

    (63) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 132
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 80

    (78) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 133
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 81

    (79) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 134
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 82

    (82) break -> BREAK PTCOMA .

    FN              reduce using rule 82 (break -> BREAK PTCOMA .)
    LET             reduce using rule 82 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 82 (break -> BREAK PTCOMA .)
    ID              reduce using rule 82 (break -> BREAK PTCOMA .)
    IF              reduce using rule 82 (break -> BREAK PTCOMA .)
    MATCH           reduce using rule 82 (break -> BREAK PTCOMA .)
    LOOP            reduce using rule 82 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 82 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 82 (break -> BREAK PTCOMA .)
    RETURN          reduce using rule 82 (break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 82 (break -> BREAK PTCOMA .)
    FOR             reduce using rule 82 (break -> BREAK PTCOMA .)
    $end            reduce using rule 82 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 82 (break -> BREAK PTCOMA .)
    COMA            reduce using rule 82 (break -> BREAK PTCOMA .)


state 83

    (83) break -> BREAK expresion . PTCOMA
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 135
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 84

    (85) return -> RETURN expresion . PTCOMA
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 136
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 85

    (84) continue -> CONTINUE PTCOMA .

    FN              reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    LET             reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    MATCH           reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    LOOP            reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    RETURN          reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    FOR             reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    $end            reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    LLAVEDER        reduce using rule 84 (continue -> CONTINUE PTCOMA .)
    COMA            reduce using rule 84 (continue -> CONTINUE PTCOMA .)


state 86

    (80) forin -> FOR ID . IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> FOR ID . IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    IN              shift and go to state 137


state 87

    (1) inicio -> instrucciones main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 88

    (5) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 138


state 89

    (33) funciones -> FN ID PARIZQ . lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> FN ID PARIZQ . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> FN ID PARIZQ . lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> FN ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER
    (37) lparametros -> . lparametros COMA lparame
    (38) lparametros -> . lparame
    (39) lparame -> . ID DOSPT tipo
    (40) lparame -> . ID DOSPT SIGNOI MUT tipo_arreglo

    PARDER          shift and go to state 141
    ID              shift and go to state 139

    lparametros                    shift and go to state 140
    lparame                        shift and go to state 142

state 90

    (49) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> LET MUT ID . IGUAL expresion PTCOMA
    (30) declaracion_arreglos -> LET MUT ID . DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> LET MUT ID . DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    DOSPT           shift and go to state 143
    IGUAL           shift and go to state 144


state 91

    (51) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET ID DOSPT . VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR

    VVEC            shift and go to state 146
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76

    tipo                           shift and go to state 145

state 92

    (52) declaracion -> LET ID IGUAL . expresion PTCOMA
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 147
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 93

    (53) asignacion -> ID IGUAL expresion . PTCOMA
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 148
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 94

    (54) asignacion -> ID lindices IGUAL . expresion PTCOMA
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 149
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 95

    (128) lindices -> lindices CORIZQ . expresion CORDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 150
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 96

    (41) llamada_funciones -> ID PARIZQ largumentos . PARDER
    (43) largumentos -> largumentos . COMA largumento

    PARDER          shift and go to state 151
    COMA            shift and go to state 152


state 97

    (42) llamada_funciones -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    MAS             reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    POR             reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORQUE        reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORQUE        reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORIQUE       reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    OR              reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    AND             reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    COMA            reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    PTO             reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUAL           reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    BARRAS          reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 42 (llamada_funciones -> ID PARIZQ PARDER .)


state 98

    (44) largumentos -> largumento .

    PARDER          reduce using rule 44 (largumentos -> largumento .)
    COMA            reduce using rule 44 (largumentos -> largumento .)


state 99

    (45) largumento -> expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PARDER          reduce using rule 45 (largumento -> expresion .)
    COMA            reduce using rule 45 (largumento -> expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 100

    (46) largumento -> SIGNOI . MUT expresion
    (92) tipo -> SIGNOI . STR

    MUT             shift and go to state 153
    STR             shift and go to state 129


state 101

    (129) lindices -> CORIZQ expresion . CORDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    CORDER          shift and go to state 154
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 102

    (47) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 155
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 103

    (131) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 156
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 104

    (55) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (56) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (57) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (58) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 157
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 105

    (107) expresion -> expresion MAS . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 158
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 106

    (108) expresion -> expresion MENOS . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 159
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 107

    (109) expresion -> expresion POR . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 160
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 108

    (110) expresion -> expresion DIVIDIDO . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 161
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 109

    (111) expresion -> expresion MODULO . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 162
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 110

    (114) expresion -> expresion IGUALQUE . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 163
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 111

    (115) expresion -> expresion NOIGUALQUE . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 164
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 112

    (116) expresion -> expresion MENORQUE . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 165
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 113

    (117) expresion -> expresion MAYORQUE . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 166
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 114

    (118) expresion -> expresion MENORIQUE . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 167
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 115

    (119) expresion -> expresion MAYORIQUE . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 168
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 116

    (120) expresion -> expresion OR . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 169
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 117

    (121) expresion -> expresion AND . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 170
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 118

    (25) expresion -> VEC NOT . CORIZQ expresiones CORDER

    CORIZQ          shift and go to state 171


state 119

    (123) expresion -> NOT expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 123 (expresion -> NOT expresion .)
    MAS             reduce using rule 123 (expresion -> NOT expresion .)
    MENOS           reduce using rule 123 (expresion -> NOT expresion .)
    POR             reduce using rule 123 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 123 (expresion -> NOT expresion .)
    MODULO          reduce using rule 123 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 123 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 123 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 123 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 123 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 123 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 123 (expresion -> NOT expresion .)
    OR              reduce using rule 123 (expresion -> NOT expresion .)
    AND             reduce using rule 123 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 123 (expresion -> NOT expresion .)
    PARDER          reduce using rule 123 (expresion -> NOT expresion .)
    COMA            reduce using rule 123 (expresion -> NOT expresion .)
    CORDER          reduce using rule 123 (expresion -> NOT expresion .)
    PTO             reduce using rule 123 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 123 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 123 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 123 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIVIDIDO        [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 109 ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 120

    (126) expresion -> CORIZQ expresiones . CORDER
    (93) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 172
    COMA            shift and go to state 173


state 121

    (94) expresiones -> expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    CORDER          reduce using rule 94 (expresiones -> expresion .)
    COMA            reduce using rule 94 (expresiones -> expresion .)
    PARDER          reduce using rule 94 (expresiones -> expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 122

    (26) expresion -> VVEC DOSPT . DOSPT NEW PARIZQ PARDER
    (27) expresion -> VVEC DOSPT . DOSPT WITH_CAPACITY PARIZQ expresion PARDER

    DOSPT           shift and go to state 174


state 123

    (124) expresion -> PARIZQ expresion . PARDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PARDER          shift and go to state 175
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 124

    (127) expresion -> ID lindices .
    (128) lindices -> lindices . CORIZQ expresion CORDER

    LLAVEIZQ        reduce using rule 127 (expresion -> ID lindices .)
    MAS             reduce using rule 127 (expresion -> ID lindices .)
    MENOS           reduce using rule 127 (expresion -> ID lindices .)
    POR             reduce using rule 127 (expresion -> ID lindices .)
    DIVIDIDO        reduce using rule 127 (expresion -> ID lindices .)
    MODULO          reduce using rule 127 (expresion -> ID lindices .)
    IGUALQUE        reduce using rule 127 (expresion -> ID lindices .)
    NOIGUALQUE      reduce using rule 127 (expresion -> ID lindices .)
    MENORQUE        reduce using rule 127 (expresion -> ID lindices .)
    MAYORQUE        reduce using rule 127 (expresion -> ID lindices .)
    MENORIQUE       reduce using rule 127 (expresion -> ID lindices .)
    MAYORIQUE       reduce using rule 127 (expresion -> ID lindices .)
    OR              reduce using rule 127 (expresion -> ID lindices .)
    AND             reduce using rule 127 (expresion -> ID lindices .)
    PTCOMA          reduce using rule 127 (expresion -> ID lindices .)
    PARDER          reduce using rule 127 (expresion -> ID lindices .)
    COMA            reduce using rule 127 (expresion -> ID lindices .)
    CORDER          reduce using rule 127 (expresion -> ID lindices .)
    PTO             reduce using rule 127 (expresion -> ID lindices .)
    IGUAL           reduce using rule 127 (expresion -> ID lindices .)
    BARRAS          reduce using rule 127 (expresion -> ID lindices .)
    LLAVEDER        reduce using rule 127 (expresion -> ID lindices .)
    CORIZQ          shift and go to state 95


state 125

    (29) nativas_vec -> ID PTO . LEN PARIZQ PARDER

    LEN             shift and go to state 176


state 126

    (102) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (103) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 177
    TOOWNED         shift and go to state 178


state 127

    (122) expresion -> MENOS expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 122 (expresion -> MENOS expresion .)
    MAS             reduce using rule 122 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 122 (expresion -> MENOS expresion .)
    POR             reduce using rule 122 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 122 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 122 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 122 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 122 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 122 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 122 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 122 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 122 (expresion -> MENOS expresion .)
    OR              reduce using rule 122 (expresion -> MENOS expresion .)
    AND             reduce using rule 122 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 122 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 122 (expresion -> MENOS expresion .)
    COMA            reduce using rule 122 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 122 (expresion -> MENOS expresion .)
    PTO             reduce using rule 122 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 122 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 122 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 122 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIVIDIDO        [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 109 ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 128

    (112) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 179


state 129

    (92) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 92 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 92 (tipo -> SIGNOI STR .)
    PARDER          reduce using rule 92 (tipo -> SIGNOI STR .)
    COMA            reduce using rule 92 (tipo -> SIGNOI STR .)
    PTCOMA          reduce using rule 92 (tipo -> SIGNOI STR .)
    MAYORQUE        reduce using rule 92 (tipo -> SIGNOI STR .)
    LLAVEIZQ        reduce using rule 92 (tipo -> SIGNOI STR .)


state 130

    (142) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 180
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 131

    (153) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 181
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 132

    (63) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (64) imatch -> . opmatch COMA dmatch
    (65) opmatch -> . opmatch COMA cmatch
    (66) opmatch -> . opmatch COMA rmatch
    (67) opmatch -> . cmatch
    (68) opmatch -> . rmatch
    (69) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (70) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (75) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (71) bloque_match -> . bloque_match BARRAS expresion
    (72) bloque_match -> . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 182
    imatch                         shift and go to state 183
    opmatch                        shift and go to state 184
    cmatch                         shift and go to state 185
    rmatch                         shift and go to state 186
    bloque_match                   shift and go to state 187
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 133

    (78) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 188
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 134

    (79) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 189
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 135

    (83) break -> BREAK expresion PTCOMA .

    FN              reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    LET             reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    PRINTLN         reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    ID              reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    IF              reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    MATCH           reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    LOOP            reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    WHILE           reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    BREAK           reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    RETURN          reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    CONTINUE        reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    FOR             reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    $end            reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    LLAVEDER        reduce using rule 83 (break -> BREAK expresion PTCOMA .)
    COMA            reduce using rule 83 (break -> BREAK expresion PTCOMA .)


state 136

    (85) return -> RETURN expresion PTCOMA .

    FN              reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    LET             reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    PRINTLN         reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    ID              reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    IF              reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    MATCH           reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    LOOP            reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    WHILE           reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    BREAK           reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    RETURN          reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    CONTINUE        reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    FOR             reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    $end            reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    LLAVEDER        reduce using rule 85 (return -> RETURN expresion PTCOMA .)
    COMA            reduce using rule 85 (return -> RETURN expresion PTCOMA .)


state 137

    (80) forin -> FOR ID IN . expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> FOR ID IN . expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 190
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 138

    (5) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 191


state 139

    (39) lparame -> ID . DOSPT tipo
    (40) lparame -> ID . DOSPT SIGNOI MUT tipo_arreglo

    DOSPT           shift and go to state 192


state 140

    (33) funciones -> FN ID PARIZQ lparametros . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> FN ID PARIZQ lparametros . PARDER LLAVEIZQ instrucciones LLAVEDER
    (37) lparametros -> lparametros . COMA lparame

    PARDER          shift and go to state 193
    COMA            shift and go to state 194


state 141

    (34) funciones -> FN ID PARIZQ PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> FN ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 195
    LLAVEIZQ        shift and go to state 196


state 142

    (38) lparametros -> lparame .

    PARDER          reduce using rule 38 (lparametros -> lparame .)
    COMA            reduce using rule 38 (lparametros -> lparame .)


state 143

    (49) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (30) declaracion_arreglos -> LET MUT ID DOSPT . tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> LET MUT ID DOSPT . VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (31) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (32) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    VVEC            shift and go to state 199
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    CORIZQ          shift and go to state 200

    tipo                           shift and go to state 197
    tipo_arreglo                   shift and go to state 198

state 144

    (50) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 201
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 145

    (51) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 202


state 146

    (24) declaracion_vector -> LET ID DOSPT VVEC . MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    MENORQUE        shift and go to state 203


state 147

    (52) declaracion -> LET ID IGUAL expresion . PTCOMA
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 204
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 148

    (53) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 53 (asignacion -> ID IGUAL expresion PTCOMA .)


state 149

    (54) asignacion -> ID lindices IGUAL expresion . PTCOMA
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 205
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 150

    (128) lindices -> lindices CORIZQ expresion . CORDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    CORDER          shift and go to state 206
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 151

    (41) llamada_funciones -> ID PARIZQ largumentos PARDER .

    PTCOMA          reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEIZQ        reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAS             reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENOS           reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    POR             reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    DIVIDIDO        reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MODULO          reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUALQUE        reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    NOIGUALQUE      reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORQUE        reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORQUE        reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORIQUE       reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORIQUE       reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    OR              reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    AND             reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PARDER          reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    COMA            reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    CORDER          reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PTO             reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUAL           reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    BARRAS          reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEDER        reduce using rule 41 (llamada_funciones -> ID PARIZQ largumentos PARDER .)


state 152

    (43) largumentos -> largumentos COMA . largumento
    (45) largumento -> . expresion
    (46) largumento -> . SIGNOI MUT expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    SIGNOI          shift and go to state 100
    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    largumento                     shift and go to state 207
    expresion                      shift and go to state 99
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 153

    (46) largumento -> SIGNOI MUT . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 208
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 154

    (129) lindices -> CORIZQ expresion CORDER .

    IGUAL           reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    POR             reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    OR              reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    AND             reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    PTO             reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 129 (lindices -> CORIZQ expresion CORDER .)


state 155

    (47) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (48) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    COMA            shift and go to state 209
    PARDER          shift and go to state 210
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 156

    (131) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (132) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (133) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (134) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (139) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (140) bloque_expresion -> . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 211
    bloque_expresion               shift and go to state 212
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 157

    (55) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (56) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (57) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (58) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 213
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 158

    (107) expresion -> expresion MAS expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 107 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 107 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 107 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 107 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 107 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 107 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 107 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 107 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 107 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 107 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 107 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 107 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 107 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 107 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 107 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 107 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 107 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 107 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 107 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109

  ! POR             [ reduce using rule 107 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 107 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 107 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 159

    (108) expresion -> expresion MENOS expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 108 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 108 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 108 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 108 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 108 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 108 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 108 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 108 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 108 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 108 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 108 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 108 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 108 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 108 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 108 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 108 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 108 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 108 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 108 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109

  ! POR             [ reduce using rule 108 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 108 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 108 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 160

    (109) expresion -> expresion POR expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 109 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 109 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 109 (expresion -> expresion POR expresion .)
    POR             reduce using rule 109 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 109 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 109 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 109 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 109 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 109 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 109 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 109 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 109 (expresion -> expresion POR expresion .)
    OR              reduce using rule 109 (expresion -> expresion POR expresion .)
    AND             reduce using rule 109 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 109 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 109 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 109 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 109 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 109 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 109 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 109 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 109 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIVIDIDO        [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 109 ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 161

    (110) expresion -> expresion DIVIDIDO expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 110 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIVIDIDO        [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 109 ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 162

    (111) expresion -> expresion MODULO expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 111 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 111 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 111 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 111 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 111 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 111 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 111 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 111 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 111 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 111 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 111 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 111 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 111 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 111 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 111 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 111 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 111 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 111 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 111 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 111 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 111 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 111 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIVIDIDO        [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 109 ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 163

    (114) expresion -> expresion IGUALQUE expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    CORDER          reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 114 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109

  ! MAS             [ reduce using rule 114 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 114 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 114 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 114 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 114 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 164

    (115) expresion -> expresion NOIGUALQUE expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    CORDER          reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109

  ! MAS             [ reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 115 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 165

    (116) expresion -> expresion MENORQUE expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    CORDER          reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 116 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109

  ! MAS             [ reduce using rule 116 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 116 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 116 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 116 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 116 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 166

    (117) expresion -> expresion MAYORQUE expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    CORDER          reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 117 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109

  ! MAS             [ reduce using rule 117 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 117 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 117 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 117 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 117 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 167

    (118) expresion -> expresion MENORIQUE expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    CORDER          reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 118 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109

  ! MAS             [ reduce using rule 118 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 118 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 118 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 118 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 118 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 168

    (119) expresion -> expresion MAYORIQUE expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    CORDER          reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109

  ! MAS             [ reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 119 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NOIGUALQUE      [ shift and go to state 111 ]
  ! MENORQUE        [ shift and go to state 112 ]
  ! MAYORQUE        [ shift and go to state 113 ]
  ! MENORIQUE       [ shift and go to state 114 ]
  ! MAYORIQUE       [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 169

    (120) expresion -> expresion OR expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 120 (expresion -> expresion OR expresion .)
    OR              reduce using rule 120 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 120 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 120 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 120 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 120 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 120 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 120 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 120 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 120 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    AND             shift and go to state 117

  ! MAS             [ reduce using rule 120 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 120 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 120 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 120 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 120 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 120 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 120 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 120 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 120 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 120 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 120 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 120 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 116 ]


state 170

    (121) expresion -> expresion AND expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 121 (expresion -> expresion AND expresion .)
    OR              reduce using rule 121 (expresion -> expresion AND expresion .)
    AND             reduce using rule 121 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 121 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 121 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 121 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 121 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 121 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 121 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 121 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 121 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115

  ! MAS             [ reduce using rule 121 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 121 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 121 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 121 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 121 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 121 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 121 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 121 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 121 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 121 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 121 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 171

    (25) expresion -> VEC NOT CORIZQ . expresiones CORDER
    (93) expresiones -> . expresiones COMA expresion
    (94) expresiones -> . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresiones                    shift and go to state 214
    expresion                      shift and go to state 121
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 172

    (126) expresion -> CORIZQ expresiones CORDER .

    LLAVEIZQ        reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    MAS             reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    POR             reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    DIVIDIDO        reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    IGUALQUE        reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    NOIGUALQUE      reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    MENORQUE        reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    MAYORQUE        reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    MENORIQUE       reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    MAYORIQUE       reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    OR              reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    AND             reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    PTCOMA          reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    COMA            reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    PTO             reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    IGUAL           reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    BARRAS          reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)
    LLAVEDER        reduce using rule 126 (expresion -> CORIZQ expresiones CORDER .)


state 173

    (93) expresiones -> expresiones COMA . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 215
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 174

    (26) expresion -> VVEC DOSPT DOSPT . NEW PARIZQ PARDER
    (27) expresion -> VVEC DOSPT DOSPT . WITH_CAPACITY PARIZQ expresion PARDER

    NEW             shift and go to state 216
    WITH_CAPACITY   shift and go to state 217


state 175

    (124) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)


state 176

    (29) nativas_vec -> ID PTO LEN . PARIZQ PARDER

    PARIZQ          shift and go to state 218


state 177

    (102) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 219


state 178

    (103) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 220


state 179

    (112) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 221
    POWF            shift and go to state 222


state 180

    (142) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (143) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (146) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (147) opmatch_asig -> . cmatch_asig
    (148) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (149) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (150) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (151) bloque_match_asig -> . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 223
    imatch_asig                    shift and go to state 224
    opmatch_asig                   shift and go to state 225
    cmatch_asig                    shift and go to state 226
    bloque_match_asig              shift and go to state 227
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 181

    (153) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 228
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 182

    (75) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (72) bloque_match -> expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PTO             shift and go to state 229
    IGUAL           reduce using rule 72 (bloque_match -> expresion .)
    BARRAS          reduce using rule 72 (bloque_match -> expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 183

    (63) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 230


state 184

    (64) imatch -> opmatch . COMA dmatch
    (65) opmatch -> opmatch . COMA cmatch
    (66) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 231


state 185

    (67) opmatch -> cmatch .

    COMA            reduce using rule 67 (opmatch -> cmatch .)


state 186

    (68) opmatch -> rmatch .

    COMA            reduce using rule 68 (opmatch -> rmatch .)


state 187

    (69) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (70) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (71) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 232
    BARRAS          shift and go to state 233


state 188

    (78) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 78 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 189

    (79) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 234
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 190

    (80) forin -> FOR ID IN expresion . LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> FOR ID IN expresion . PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 235
    PTO             shift and go to state 236
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 191

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 237
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 192

    (39) lparame -> ID DOSPT . tipo
    (40) lparame -> ID DOSPT . SIGNOI MUT tipo_arreglo
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR

    SIGNOI          shift and go to state 239
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75

    tipo                           shift and go to state 238

state 193

    (33) funciones -> FN ID PARIZQ lparametros PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> FN ID PARIZQ lparametros PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 240
    LLAVEIZQ        shift and go to state 241


state 194

    (37) lparametros -> lparametros COMA . lparame
    (39) lparame -> . ID DOSPT tipo
    (40) lparame -> . ID DOSPT SIGNOI MUT tipo_arreglo

    ID              shift and go to state 139

    lparame                        shift and go to state 242

state 195

    (34) funciones -> FN ID PARIZQ PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 243


state 196

    (36) funciones -> FN ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 244
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 197

    (49) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 245


state 198

    (30) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 246


state 199

    (23) declaracion_vector -> LET MUT ID DOSPT VVEC . MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    MENORQUE        shift and go to state 247


state 200

    (31) tipo_arreglo -> CORIZQ . tipo_arreglo PTCOMA expresion CORDER
    (32) tipo_arreglo -> CORIZQ . tipo PTCOMA expresion CORDER
    (31) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (32) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR

    CORIZQ          shift and go to state 200
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76

    tipo_arreglo                   shift and go to state 248
    tipo                           shift and go to state 249

state 201

    (50) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 250
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 202

    (51) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    tipo                           shift and go to state 65
    expresion                      shift and go to state 251
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 203

    (24) declaracion_vector -> LET ID DOSPT VVEC MENORQUE . tipo MAYORQUE IGUAL expresion PTCOMA
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR

    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76

    tipo                           shift and go to state 252

state 204

    (52) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 52 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 205

    (54) asignacion -> ID lindices IGUAL expresion PTCOMA .

    FN              reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LET             reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    ID              reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    IF              reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    FOR             reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    $end            reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    COMA            reduce using rule 54 (asignacion -> ID lindices IGUAL expresion PTCOMA .)


state 206

    (128) lindices -> lindices CORIZQ expresion CORDER .

    IGUAL           reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    MAS             reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    MENOS           reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    POR             reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    MODULO          reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    OR              reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    AND             reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    PARDER          reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    COMA            reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    CORDER          reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    PTO             reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 128 (lindices -> lindices CORIZQ expresion CORDER .)


state 207

    (43) largumentos -> largumentos COMA largumento .

    PARDER          reduce using rule 43 (largumentos -> largumentos COMA largumento .)
    COMA            reduce using rule 43 (largumentos -> largumentos COMA largumento .)


state 208

    (46) largumento -> SIGNOI MUT expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PARDER          reduce using rule 46 (largumento -> SIGNOI MUT expresion .)
    COMA            reduce using rule 46 (largumento -> SIGNOI MUT expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 209

    (47) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (93) expresiones -> . expresiones COMA expresion
    (94) expresiones -> . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 121
    expresiones                    shift and go to state 253
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 210

    (48) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 254


state 211

    (140) bloque_expresion -> expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 140 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 140 (bloque_expresion -> expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 212

    (131) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (132) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elsea
    (133) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa
    (134) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa elsea
    (139) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 255
    PTCOMA          shift and go to state 256


state 213

    (55) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (56) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (57) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (58) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (62) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (59) lelseif -> . lelseif elseif
    (60) lelseif -> . elseif
    (61) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 55 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 259

    else                           shift and go to state 257
    lelseif                        shift and go to state 258
    elseif                         shift and go to state 260

state 214

    (25) expresion -> VEC NOT CORIZQ expresiones . CORDER
    (93) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 261
    COMA            shift and go to state 173


state 215

    (93) expresiones -> expresiones COMA expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    CORDER          reduce using rule 93 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 93 (expresiones -> expresiones COMA expresion .)
    PARDER          reduce using rule 93 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 216

    (26) expresion -> VVEC DOSPT DOSPT NEW . PARIZQ PARDER

    PARIZQ          shift and go to state 262


state 217

    (27) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 263


state 218

    (29) nativas_vec -> ID PTO LEN PARIZQ . PARDER

    PARDER          shift and go to state 264


state 219

    (102) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 265


state 220

    (103) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 266


state 221

    (112) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 267


state 222

    (113) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 268


state 223

    (151) bloque_match_asig -> expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 151 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 151 (bloque_match_asig -> expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 224

    (142) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 269


state 225

    (143) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (146) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 270


state 226

    (147) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 147 (opmatch_asig -> cmatch_asig .)


state 227

    (148) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (149) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (150) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 271
    BARRAS          shift and go to state 272


state 228

    (153) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    LLAVEIZQ        reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CORDER          reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 153 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 229

    (75) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 273


state 230

    (63) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BREAK           reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    RETURN          reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CONTINUE        reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    FOR             reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    $end            reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 63 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 231

    (64) imatch -> opmatch COMA . dmatch
    (65) opmatch -> opmatch COMA . cmatch
    (66) opmatch -> opmatch COMA . rmatch
    (73) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (74) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (69) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (70) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (75) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (71) bloque_match -> . bloque_match BARRAS expresion
    (72) bloque_match -> . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 277
    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    dmatch                         shift and go to state 274
    cmatch                         shift and go to state 275
    rmatch                         shift and go to state 276
    bloque_match                   shift and go to state 187
    expresion                      shift and go to state 182
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 232

    (69) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (70) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 278


state 233

    (71) bloque_match -> bloque_match BARRAS . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 279
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 234

    (79) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 79 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 235

    (80) forin -> FOR ID IN expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 280
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 236

    (81) forin -> FOR ID IN expresion PTO . PTO expresion LLAVEIZQ instrucciones LLAVEDER

    PTO             shift and go to state 281


state 237

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 282
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 238

    (39) lparame -> ID DOSPT tipo .

    PARDER          reduce using rule 39 (lparame -> ID DOSPT tipo .)
    COMA            reduce using rule 39 (lparame -> ID DOSPT tipo .)


state 239

    (40) lparame -> ID DOSPT SIGNOI . MUT tipo_arreglo
    (92) tipo -> SIGNOI . STR

    MUT             shift and go to state 283
    STR             shift and go to state 129


state 240

    (33) funciones -> FN ID PARIZQ lparametros PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 284


state 241

    (35) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 285
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 242

    (37) lparametros -> lparametros COMA lparame .

    PARDER          reduce using rule 37 (lparametros -> lparametros COMA lparame .)
    COMA            reduce using rule 37 (lparametros -> lparametros COMA lparame .)


state 243

    (34) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR

    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76

    tipo                           shift and go to state 286

state 244

    (36) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 287
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 245

    (49) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    tipo                           shift and go to state 65
    expresion                      shift and go to state 288
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 246

    (30) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL . expresion PTCOMA
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 289
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 247

    (23) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE . tipo MAYORQUE IGUAL expresion PTCOMA
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR

    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76

    tipo                           shift and go to state 290

state 248

    (31) tipo_arreglo -> CORIZQ tipo_arreglo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 291


state 249

    (32) tipo_arreglo -> CORIZQ tipo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 292


state 250

    (50) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 50 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 251

    (51) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 293
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 252

    (24) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo . MAYORQUE IGUAL expresion PTCOMA

    MAYORQUE        shift and go to state 294


state 253

    (47) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (93) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 295
    COMA            shift and go to state 173


state 254

    (48) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 48 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 255

    (131) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (132) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elsea
    (133) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa
    (134) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa elsea
    (138) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (135) elseifa -> . elseifa lif
    (136) elseifa -> . lif
    (137) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 131 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 298

    elsea                          shift and go to state 296
    elseifa                        shift and go to state 297
    lif                            shift and go to state 299

state 256

    (139) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 300
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 257

    (56) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    RETURN          reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    FOR             reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 56 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 258

    (57) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (58) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (59) lelseif -> lelseif . elseif
    (62) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (61) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    RETURN          reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    FOR             reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 57 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 259

    else                           shift and go to state 301
    elseif                         shift and go to state 302

state 259

    (62) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (61) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 303
    IF              shift and go to state 304


state 260

    (60) lelseif -> elseif .

    ELSE            reduce using rule 60 (lelseif -> elseif .)
    FN              reduce using rule 60 (lelseif -> elseif .)
    LET             reduce using rule 60 (lelseif -> elseif .)
    PRINTLN         reduce using rule 60 (lelseif -> elseif .)
    ID              reduce using rule 60 (lelseif -> elseif .)
    IF              reduce using rule 60 (lelseif -> elseif .)
    MATCH           reduce using rule 60 (lelseif -> elseif .)
    LOOP            reduce using rule 60 (lelseif -> elseif .)
    WHILE           reduce using rule 60 (lelseif -> elseif .)
    BREAK           reduce using rule 60 (lelseif -> elseif .)
    RETURN          reduce using rule 60 (lelseif -> elseif .)
    CONTINUE        reduce using rule 60 (lelseif -> elseif .)
    FOR             reduce using rule 60 (lelseif -> elseif .)
    $end            reduce using rule 60 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 60 (lelseif -> elseif .)
    COMA            reduce using rule 60 (lelseif -> elseif .)


state 261

    (25) expresion -> VEC NOT CORIZQ expresiones CORDER .

    LLAVEIZQ        reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MAS             reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    POR             reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    DIVIDIDO        reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    IGUALQUE        reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    NOIGUALQUE      reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MENORQUE        reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MAYORQUE        reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MENORIQUE       reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MAYORIQUE       reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    OR              reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    AND             reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    PTCOMA          reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    COMA            reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    PTO             reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    IGUAL           reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    BARRAS          reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    LLAVEDER        reduce using rule 25 (expresion -> VEC NOT CORIZQ expresiones CORDER .)


state 262

    (26) expresion -> VVEC DOSPT DOSPT NEW PARIZQ . PARDER

    PARDER          shift and go to state 305


state 263

    (27) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ . expresion PARDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 306
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 264

    (29) nativas_vec -> ID PTO LEN PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MAS             reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MENOS           reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    POR             reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MODULO          reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    IGUALQUE        reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MENORQUE        reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MAYORQUE        reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MENORIQUE       reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    OR              reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    AND             reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    PTCOMA          reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    PARDER          reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    COMA            reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    CORDER          reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    PTO             reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    IGUAL           reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    BARRAS          reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    LLAVEDER        reduce using rule 29 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)


state 265

    (102) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 102 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 266

    (103) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    CORDER          reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 103 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 267

    (112) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    tipo                           shift and go to state 65
    expresion                      shift and go to state 307
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 268

    (113) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    tipo                           shift and go to state 65
    expresion                      shift and go to state 308
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 269

    (142) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    LLAVEIZQ        reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    CORDER          reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTO             reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 142 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 270

    (143) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (146) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (144) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (145) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (148) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (149) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (150) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (151) bloque_match_asig -> . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 311
    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    dmatch_asig                    shift and go to state 309
    cmatch_asig                    shift and go to state 310
    expresion                      shift and go to state 223
    bloque_match_asig              shift and go to state 227
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 271

    (148) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (149) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 312


state 272

    (150) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 313
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 273

    (75) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 314


state 274

    (64) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 64 (imatch -> opmatch COMA dmatch .)


state 275

    (65) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 65 (opmatch -> opmatch COMA cmatch .)


state 276

    (66) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 66 (opmatch -> opmatch COMA rmatch .)


state 277

    (73) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (74) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 315


state 278

    (69) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (70) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 316
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 317
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 279

    (71) bloque_match -> bloque_match BARRAS expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 71 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 71 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 280

    (80) forin -> FOR ID IN expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 318
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 281

    (81) forin -> FOR ID IN expresion PTO PTO . expresion LLAVEIZQ instrucciones LLAVEDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 319
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 282

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    LET             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 283

    (40) lparame -> ID DOSPT SIGNOI MUT . tipo_arreglo
    (31) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (32) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    CORIZQ          shift and go to state 200

    tipo_arreglo                   shift and go to state 320

state 284

    (33) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR

    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76

    tipo                           shift and go to state 321

state 285

    (35) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 322
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 286

    (34) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 323


state 287

    (36) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 36 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 288

    (49) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 324
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 289

    (30) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion . PTCOMA
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 325
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 290

    (23) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo . MAYORQUE IGUAL expresion PTCOMA

    MAYORQUE        shift and go to state 326


state 291

    (31) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA . expresion CORDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 327
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 292

    (32) tipo_arreglo -> CORIZQ tipo PTCOMA . expresion CORDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    tipo                           shift and go to state 65
    expresion                      shift and go to state 328
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 293

    (51) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 51 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 294

    (24) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 329


state 295

    (47) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 330


state 296

    (132) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .

    LLAVEIZQ        reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAS             reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENOS           reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    POR             reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    DIVIDIDO        reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MODULO          reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUALQUE        reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    NOIGUALQUE      reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORQUE        reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORQUE        reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORIQUE       reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORIQUE       reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    OR              reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AND             reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTCOMA          reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PARDER          reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    COMA            reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    CORDER          reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTO             reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUAL           reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    BARRAS          reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEDER        reduce using rule 132 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)


state 297

    (133) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .
    (134) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa . elsea
    (135) elseifa -> elseifa . lif
    (138) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (137) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAS             reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENOS           reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    POR             reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    DIVIDIDO        reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MODULO          reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUALQUE        reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    NOIGUALQUE      reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORQUE        reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORQUE        reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORIQUE       reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORIQUE       reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    OR              reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AND             reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTCOMA          reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PARDER          reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    COMA            reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    CORDER          reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTO             reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUAL           reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    BARRAS          reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEDER        reduce using rule 133 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    ELSE            shift and go to state 298

    elsea                          shift and go to state 331
    lif                            shift and go to state 332

state 298

    (138) elsea -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (137) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 333
    IF              shift and go to state 334


state 299

    (136) elseifa -> lif .

    ELSE            reduce using rule 136 (elseifa -> lif .)
    LLAVEIZQ        reduce using rule 136 (elseifa -> lif .)
    MAS             reduce using rule 136 (elseifa -> lif .)
    MENOS           reduce using rule 136 (elseifa -> lif .)
    POR             reduce using rule 136 (elseifa -> lif .)
    DIVIDIDO        reduce using rule 136 (elseifa -> lif .)
    MODULO          reduce using rule 136 (elseifa -> lif .)
    IGUALQUE        reduce using rule 136 (elseifa -> lif .)
    NOIGUALQUE      reduce using rule 136 (elseifa -> lif .)
    MENORQUE        reduce using rule 136 (elseifa -> lif .)
    MAYORQUE        reduce using rule 136 (elseifa -> lif .)
    MENORIQUE       reduce using rule 136 (elseifa -> lif .)
    MAYORIQUE       reduce using rule 136 (elseifa -> lif .)
    OR              reduce using rule 136 (elseifa -> lif .)
    AND             reduce using rule 136 (elseifa -> lif .)
    PTCOMA          reduce using rule 136 (elseifa -> lif .)
    PARDER          reduce using rule 136 (elseifa -> lif .)
    COMA            reduce using rule 136 (elseifa -> lif .)
    CORDER          reduce using rule 136 (elseifa -> lif .)
    PTO             reduce using rule 136 (elseifa -> lif .)
    IGUAL           reduce using rule 136 (elseifa -> lif .)
    BARRAS          reduce using rule 136 (elseifa -> lif .)
    LLAVEDER        reduce using rule 136 (elseifa -> lif .)


state 300

    (139) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 139 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 139 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 301

    (58) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    RETURN          reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    FOR             reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 58 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 302

    (59) lelseif -> lelseif elseif .

    ELSE            reduce using rule 59 (lelseif -> lelseif elseif .)
    FN              reduce using rule 59 (lelseif -> lelseif elseif .)
    LET             reduce using rule 59 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 59 (lelseif -> lelseif elseif .)
    ID              reduce using rule 59 (lelseif -> lelseif elseif .)
    IF              reduce using rule 59 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 59 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 59 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 59 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 59 (lelseif -> lelseif elseif .)
    RETURN          reduce using rule 59 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 59 (lelseif -> lelseif elseif .)
    FOR             reduce using rule 59 (lelseif -> lelseif elseif .)
    $end            reduce using rule 59 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 59 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 59 (lelseif -> lelseif elseif .)


state 303

    (62) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 335
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 304

    (61) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 336
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 305

    (26) expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MAS             reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MENOS           reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    POR             reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MODULO          reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    IGUALQUE        reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MENORQUE        reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MAYORQUE        reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MENORIQUE       reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    OR              reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    AND             reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    PTCOMA          reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    PARDER          reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    COMA            reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    CORDER          reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    PTO             reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    IGUAL           reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    BARRAS          reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    LLAVEDER        reduce using rule 26 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)


state 306

    (27) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion . PARDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PARDER          shift and go to state 337
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 307

    (112) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    COMA            shift and go to state 338
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 308

    (113) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    COMA            shift and go to state 339
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 309

    (143) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 143 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 310

    (146) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 146 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 311

    (144) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (145) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 340


state 312

    (148) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (149) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 341
    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 342
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 313

    (150) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 150 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 150 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 314

    (75) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 343
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 315

    (73) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (74) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 344


state 316

    (69) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 345
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 317

    (70) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 70 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 318

    (80) forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 80 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)


state 319

    (81) forin -> FOR ID IN expresion PTO PTO expresion . LLAVEIZQ instrucciones LLAVEDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 346
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 320

    (40) lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .

    PARDER          reduce using rule 40 (lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .)
    COMA            reduce using rule 40 (lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .)


state 321

    (33) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 347


state 322

    (35) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 35 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 323

    (34) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 348
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 324

    (49) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 49 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 325

    (30) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .

    FN              reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LET             reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    ID              reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    IF              reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    $end            reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 30 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)


state 326

    (23) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 349


state 327

    (31) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion . CORDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    CORDER          shift and go to state 350
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 328

    (32) tipo_arreglo -> CORIZQ tipo PTCOMA expresion . CORDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    CORDER          shift and go to state 351
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 329

    (24) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL . expresion PTCOMA
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    tipo                           shift and go to state 65
    expresion                      shift and go to state 352
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 330

    (47) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    RETURN          reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    FOR             reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    $end            reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 47 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 331

    (134) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .

    LLAVEIZQ        reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAS             reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENOS           reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    POR             reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    DIVIDIDO        reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MODULO          reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUALQUE        reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    NOIGUALQUE      reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORQUE        reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORQUE        reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORIQUE       reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORIQUE       reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    OR              reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AND             reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTCOMA          reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PARDER          reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    COMA            reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    CORDER          reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTO             reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUAL           reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    BARRAS          reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEDER        reduce using rule 134 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)


state 332

    (135) elseifa -> elseifa lif .

    ELSE            reduce using rule 135 (elseifa -> elseifa lif .)
    LLAVEIZQ        reduce using rule 135 (elseifa -> elseifa lif .)
    MAS             reduce using rule 135 (elseifa -> elseifa lif .)
    MENOS           reduce using rule 135 (elseifa -> elseifa lif .)
    POR             reduce using rule 135 (elseifa -> elseifa lif .)
    DIVIDIDO        reduce using rule 135 (elseifa -> elseifa lif .)
    MODULO          reduce using rule 135 (elseifa -> elseifa lif .)
    IGUALQUE        reduce using rule 135 (elseifa -> elseifa lif .)
    NOIGUALQUE      reduce using rule 135 (elseifa -> elseifa lif .)
    MENORQUE        reduce using rule 135 (elseifa -> elseifa lif .)
    MAYORQUE        reduce using rule 135 (elseifa -> elseifa lif .)
    MENORIQUE       reduce using rule 135 (elseifa -> elseifa lif .)
    MAYORIQUE       reduce using rule 135 (elseifa -> elseifa lif .)
    OR              reduce using rule 135 (elseifa -> elseifa lif .)
    AND             reduce using rule 135 (elseifa -> elseifa lif .)
    PTCOMA          reduce using rule 135 (elseifa -> elseifa lif .)
    PARDER          reduce using rule 135 (elseifa -> elseifa lif .)
    COMA            reduce using rule 135 (elseifa -> elseifa lif .)
    CORDER          reduce using rule 135 (elseifa -> elseifa lif .)
    PTO             reduce using rule 135 (elseifa -> elseifa lif .)
    IGUAL           reduce using rule 135 (elseifa -> elseifa lif .)
    BARRAS          reduce using rule 135 (elseifa -> elseifa lif .)
    LLAVEDER        reduce using rule 135 (elseifa -> elseifa lif .)


state 333

    (138) elsea -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (139) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (140) bloque_expresion -> . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    bloque_expresion               shift and go to state 353
    expresion                      shift and go to state 211
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 334

    (137) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 354
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 335

    (62) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 355
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 336

    (61) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 356
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 337

    (27) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MAS             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MENOS           reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    POR             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MODULO          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    OR              reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    AND             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    PARDER          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    COMA            reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    CORDER          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    PTO             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)


state 338

    (112) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    tipo                           shift and go to state 65
    expresion                      shift and go to state 357
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 339

    (113) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    tipo                           shift and go to state 65
    expresion                      shift and go to state 358
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 340

    (144) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (145) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 359


state 341

    (148) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (139) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (140) bloque_expresion -> . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    bloque_expresion               shift and go to state 360
    expresion                      shift and go to state 211
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 342

    (149) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    COMA            reduce using rule 149 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 343

    (75) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 361
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 344

    (73) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (74) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 362
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 363
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 345

    (69) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 364
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 346

    (81) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 365
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 347

    (33) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 366
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 348

    (34) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 367
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 349

    (23) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL . expresion PTCOMA
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    tipo                           shift and go to state 65
    expresion                      shift and go to state 368
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 350

    (31) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 31 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 31 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    PARDER          reduce using rule 31 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    COMA            reduce using rule 31 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)


state 351

    (32) tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 32 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 32 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    PARDER          reduce using rule 32 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    COMA            reduce using rule 32 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)


state 352

    (24) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion . PTCOMA
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 369
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 353

    (138) elsea -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (139) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 370
    PTCOMA          shift and go to state 256


state 354

    (137) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 371
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 355

    (62) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 62 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 356

    (61) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 372
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 357

    (112) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PARDER          shift and go to state 373
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 358

    (113) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PARDER          shift and go to state 374
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 359

    (144) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (145) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 375
    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 376
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 360

    (148) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (139) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 377
    PTCOMA          shift and go to state 256


state 361

    (75) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 378


state 362

    (73) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 379
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 363

    (74) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 74 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 364

    (69) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 69 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 365

    (81) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 380
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 366

    (33) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 381
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 367

    (34) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 34 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 368

    (23) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion . PTCOMA
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 382
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 369

    (24) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .

    FN              reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LET             reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    ID              reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    IF              reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    FOR             reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    $end            reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    COMA            reduce using rule 24 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)


state 370

    (138) elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEIZQ        reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 138 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 371

    (137) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (139) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (140) bloque_expresion -> . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    expresion                      shift and go to state 211
    bloque_expresion               shift and go to state 383
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 372

    (61) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 384
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 373

    (112) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 112 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 374

    (113) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 113 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 375

    (144) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (139) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (140) bloque_expresion -> . expresion
    (25) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (26) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (27) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (28) expresion -> . nativas_vec
    (95) expresion -> . ID
    (96) expresion -> . ENTERO
    (97) expresion -> . DECIMAL
    (98) expresion -> . TRUE
    (99) expresion -> . FALSE
    (100) expresion -> . tostring
    (101) expresion -> . toowned
    (104) expresion -> . STR
    (105) expresion -> . CADENA
    (106) expresion -> . CARACTER
    (107) expresion -> . expresion MAS expresion
    (108) expresion -> . expresion MENOS expresion
    (109) expresion -> . expresion POR expresion
    (110) expresion -> . expresion DIVIDIDO expresion
    (111) expresion -> . expresion MODULO expresion
    (112) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (113) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (114) expresion -> . expresion IGUALQUE expresion
    (115) expresion -> . expresion NOIGUALQUE expresion
    (116) expresion -> . expresion MENORQUE expresion
    (117) expresion -> . expresion MAYORQUE expresion
    (118) expresion -> . expresion MENORIQUE expresion
    (119) expresion -> . expresion MAYORIQUE expresion
    (120) expresion -> . expresion OR expresion
    (121) expresion -> . expresion AND expresion
    (122) expresion -> . MENOS expresion
    (123) expresion -> . NOT expresion
    (124) expresion -> . PARIZQ expresion PARDER
    (125) expresion -> . llamada_funciones
    (126) expresion -> . CORIZQ expresiones CORDER
    (127) expresion -> . ID lindices
    (130) expresion -> . if_asig
    (141) expresion -> . match_asig
    (152) expresion -> . loop_asig
    (29) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (102) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (103) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (86) tipo -> . I64
    (87) tipo -> . F64
    (88) tipo -> . BOOL
    (89) tipo -> . CHAR
    (90) tipo -> . STRING
    (91) tipo -> . USIZE
    (92) tipo -> . SIGNOI STR
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (131) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (132) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (133) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (134) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (142) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (153) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 48
    VVEC            shift and go to state 51
    ID              shift and go to state 54
    ENTERO          shift and go to state 55
    DECIMAL         shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    STR             shift and go to state 61
    CADENA          shift and go to state 62
    CARACTER        shift and go to state 63
    MENOS           shift and go to state 64
    NOT             shift and go to state 49
    PARIZQ          shift and go to state 52
    CORIZQ          shift and go to state 50
    I64             shift and go to state 70
    F64             shift and go to state 71
    BOOL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    USIZE           shift and go to state 75
    SIGNOI          shift and go to state 76
    IF              shift and go to state 46
    MATCH           shift and go to state 77
    LOOP            shift and go to state 78

    bloque_expresion               shift and go to state 385
    expresion                      shift and go to state 211
    nativas_vec                    shift and go to state 53
    tostring                       shift and go to state 59
    toowned                        shift and go to state 60
    tipo                           shift and go to state 65
    llamada_funciones              shift and go to state 66
    if_asig                        shift and go to state 67
    match_asig                     shift and go to state 68
    loop_asig                      shift and go to state 69

state 376

    (145) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (107) expresion -> expresion . MAS expresion
    (108) expresion -> expresion . MENOS expresion
    (109) expresion -> expresion . POR expresion
    (110) expresion -> expresion . DIVIDIDO expresion
    (111) expresion -> expresion . MODULO expresion
    (114) expresion -> expresion . IGUALQUE expresion
    (115) expresion -> expresion . NOIGUALQUE expresion
    (116) expresion -> expresion . MENORQUE expresion
    (117) expresion -> expresion . MAYORQUE expresion
    (118) expresion -> expresion . MENORIQUE expresion
    (119) expresion -> expresion . MAYORIQUE expresion
    (120) expresion -> expresion . OR expresion
    (121) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 145 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODULO          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NOIGUALQUE      shift and go to state 111
    MENORQUE        shift and go to state 112
    MAYORQUE        shift and go to state 113
    MENORIQUE       shift and go to state 114
    MAYORIQUE       shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 377

    (148) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 148 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 378

    (75) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (76) rrmatch -> . instruccion
    (77) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 388
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    rrmatch                        shift and go to state 386
    instruccion                    shift and go to state 387
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 379

    (73) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 389
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 380

    (81) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 81 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)


state 381

    (33) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 33 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 382

    (23) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .

    FN              reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LET             reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    ID              reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    IF              reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    FOR             reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    $end            reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    COMA            reduce using rule 23 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)


state 383

    (137) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (139) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 390
    PTCOMA          shift and go to state 256


state 384

    (61) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 61 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 385

    (144) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (139) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 391
    PTCOMA          shift and go to state 256


state 386

    (75) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 75 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 387

    (76) rrmatch -> instruccion .

    COMA            reduce using rule 76 (rrmatch -> instruccion .)


state 388

    (77) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instrucciones                  shift and go to state 392
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 389

    (73) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 73 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 390

    (137) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 137 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 391

    (144) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 144 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 392

    (77) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (49) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (50) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (51) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (52) declaracion -> . LET ID IGUAL expresion PTCOMA
    (47) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (48) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (53) asignacion -> . ID IGUAL expresion PTCOMA
    (54) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (55) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (56) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (57) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (58) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (78) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (79) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (82) break -> . BREAK PTCOMA
    (83) break -> . BREAK expresion PTCOMA
    (85) return -> . RETURN expresion PTCOMA
    (84) continue -> . CONTINUE PTCOMA
    (33) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (34) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (35) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (36) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (42) llamada_funciones -> . ID PARIZQ PARDER
    (30) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (23) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (80) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (81) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 393
    LET             shift and go to state 21
    PRINTLN         shift and go to state 23
    ID              shift and go to state 22
    IF              shift and go to state 24
    MATCH           shift and go to state 25
    LOOP            shift and go to state 26
    WHILE           shift and go to state 27
    BREAK           shift and go to state 28
    RETURN          shift and go to state 29
    CONTINUE        shift and go to state 30
    FN              shift and go to state 35
    FOR             shift and go to state 31

    instruccion                    shift and go to state 33
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20

state 393

    (77) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 77 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 54 resolved as shift
WARNING: shift/reduce conflict for PTO in state 62 resolved as shift
