Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main
Rule 2     inicio -> main
Rule 3     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 4     instrucciones -> instrucciones instruccion
Rule 5     instrucciones -> instruccion
Rule 6     instruccion -> declaracion
Rule 7     instruccion -> imprimir
Rule 8     imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 9     imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA
Rule 10    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 11    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 12    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 13    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 14    tipo -> I64
Rule 15    tipo -> F64
Rule 16    tipo -> BOOL
Rule 17    tipo -> CHAR
Rule 18    tipo -> STRING
Rule 19    tipo -> SIGNOI STR
Rule 20    expresiones -> expresiones COMA expresion
Rule 21    expresiones -> expresion
Rule 22    expresion -> ID
Rule 23    expresion -> ENTERO
Rule 24    expresion -> DECIMAL
Rule 25    expresion -> TRUE
Rule 26    expresion -> FALSE
Rule 27    expresion -> tostring
Rule 28    expresion -> toowned
Rule 29    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 30    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 31    expresion -> STR
Rule 32    expresion -> CADENA
Rule 33    expresion -> CARACTER

Terminals, with rules where they appear

BOOL                 : 16
CADENA               : 29 30 32
CARACTER             : 33
CHAR                 : 17
COMA                 : 8 20
DECIMAL              : 24
DOSPT                : 10 12
ENTERO               : 23
EX                   : 8 9
F64                  : 15
FALSE                : 26
FN                   : 3
I64                  : 14
ID                   : 10 11 12 13 22
IGUAL                : 10 11 12 13
LET                  : 10 11 12 13
LLAVEDER             : 3
LLAVEIZQ             : 3
MAIN                 : 3
MUT                  : 10 11
PARDER               : 3 8 9 29 30
PARIZQ               : 3 8 9 29 30
PRINTLN              : 8 9
PTCOMA               : 8 9 10 11 12 13
PTO                  : 29 30
SIGNOI               : 19
STR                  : 19 31
STRING               : 18
TOOWNED              : 30
TOSTRING             : 29
TRUE                 : 25
error                : 

Nonterminals, with rules where they appear

declaracion          : 6
expresion            : 8 9 10 11 12 13 20 21
expresiones          : 8 20
imprimir             : 7
inicio               : 0
instruccion          : 4 5
instrucciones        : 1 3 4
main                 : 1 2
tipo                 : 10 12
toowned              : 28
tostring             : 27

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main
    (2) inicio -> . main
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (10) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (11) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (12) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET ID IGUAL expresion PTCOMA
    (8) imprimir -> . PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA
    (9) imprimir -> . PRINTLN EX PARIZQ expresion PARDER PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 8
    PRINTLN         shift and go to state 9

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main
    (4) instrucciones -> instrucciones . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (10) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (11) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (12) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET ID IGUAL expresion PTCOMA
    (8) imprimir -> . PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA
    (9) imprimir -> . PRINTLN EX PARIZQ expresion PARDER PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 8
    PRINTLN         shift and go to state 9

    main                           shift and go to state 10
    instruccion                    shift and go to state 11
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7

state 3

    (2) inicio -> main .

    $end            reduce using rule 2 (inicio -> main .)


state 4

    (5) instrucciones -> instruccion .

    FN              reduce using rule 5 (instrucciones -> instruccion .)
    LET             reduce using rule 5 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 5 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 5 (instrucciones -> instruccion .)


state 5

    (3) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 12


state 6

    (6) instruccion -> declaracion .

    FN              reduce using rule 6 (instruccion -> declaracion .)
    LET             reduce using rule 6 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 6 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 6 (instruccion -> declaracion .)


state 7

    (7) instruccion -> imprimir .

    FN              reduce using rule 7 (instruccion -> imprimir .)
    LET             reduce using rule 7 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 7 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 7 (instruccion -> imprimir .)


state 8

    (10) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (11) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (12) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> LET . ID IGUAL expresion PTCOMA

    MUT             shift and go to state 13
    ID              shift and go to state 14


state 9

    (8) imprimir -> PRINTLN . EX PARIZQ expresion COMA expresiones PARDER PTCOMA
    (9) imprimir -> PRINTLN . EX PARIZQ expresion PARDER PTCOMA

    EX              shift and go to state 15


state 10

    (1) inicio -> instrucciones main .

    $end            reduce using rule 1 (inicio -> instrucciones main .)


state 11

    (4) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 4 (instrucciones -> instrucciones instruccion .)


state 12

    (3) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 16


state 13

    (10) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (11) declaracion -> LET MUT . ID IGUAL expresion PTCOMA

    ID              shift and go to state 17


state 14

    (12) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 18
    IGUAL           shift and go to state 19


state 15

    (8) imprimir -> PRINTLN EX . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (9) imprimir -> PRINTLN EX . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 20


state 16

    (3) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 21


state 17

    (10) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (11) declaracion -> LET MUT ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 22
    IGUAL           shift and go to state 23


state 18

    (12) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (14) tipo -> . I64
    (15) tipo -> . F64
    (16) tipo -> . BOOL
    (17) tipo -> . CHAR
    (18) tipo -> . STRING
    (19) tipo -> . SIGNOI STR

    I64             shift and go to state 25
    F64             shift and go to state 26
    BOOL            shift and go to state 27
    CHAR            shift and go to state 28
    STRING          shift and go to state 29
    SIGNOI          shift and go to state 30

    tipo                           shift and go to state 24

state 19

    (13) declaracion -> LET ID IGUAL . expresion PTCOMA
    (22) expresion -> . ID
    (23) expresion -> . ENTERO
    (24) expresion -> . DECIMAL
    (25) expresion -> . TRUE
    (26) expresion -> . FALSE
    (27) expresion -> . tostring
    (28) expresion -> . toowned
    (31) expresion -> . STR
    (32) expresion -> . CADENA
    (33) expresion -> . CARACTER
    (29) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (30) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    STR             shift and go to state 39
    CADENA          shift and go to state 40
    CARACTER        shift and go to state 41

    expresion                      shift and go to state 32
    tostring                       shift and go to state 37
    toowned                        shift and go to state 38

state 20

    (8) imprimir -> PRINTLN EX PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (9) imprimir -> PRINTLN EX PARIZQ . expresion PARDER PTCOMA
    (22) expresion -> . ID
    (23) expresion -> . ENTERO
    (24) expresion -> . DECIMAL
    (25) expresion -> . TRUE
    (26) expresion -> . FALSE
    (27) expresion -> . tostring
    (28) expresion -> . toowned
    (31) expresion -> . STR
    (32) expresion -> . CADENA
    (33) expresion -> . CARACTER
    (29) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (30) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    STR             shift and go to state 39
    CADENA          shift and go to state 40
    CARACTER        shift and go to state 41

    expresion                      shift and go to state 42
    tostring                       shift and go to state 37
    toowned                        shift and go to state 38

state 21

    (3) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 43


state 22

    (10) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (14) tipo -> . I64
    (15) tipo -> . F64
    (16) tipo -> . BOOL
    (17) tipo -> . CHAR
    (18) tipo -> . STRING
    (19) tipo -> . SIGNOI STR

    I64             shift and go to state 25
    F64             shift and go to state 26
    BOOL            shift and go to state 27
    CHAR            shift and go to state 28
    STRING          shift and go to state 29
    SIGNOI          shift and go to state 30

    tipo                           shift and go to state 44

state 23

    (11) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (22) expresion -> . ID
    (23) expresion -> . ENTERO
    (24) expresion -> . DECIMAL
    (25) expresion -> . TRUE
    (26) expresion -> . FALSE
    (27) expresion -> . tostring
    (28) expresion -> . toowned
    (31) expresion -> . STR
    (32) expresion -> . CADENA
    (33) expresion -> . CARACTER
    (29) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (30) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    STR             shift and go to state 39
    CADENA          shift and go to state 40
    CARACTER        shift and go to state 41

    expresion                      shift and go to state 45
    tostring                       shift and go to state 37
    toowned                        shift and go to state 38

state 24

    (12) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 46


state 25

    (14) tipo -> I64 .

    IGUAL           reduce using rule 14 (tipo -> I64 .)


state 26

    (15) tipo -> F64 .

    IGUAL           reduce using rule 15 (tipo -> F64 .)


state 27

    (16) tipo -> BOOL .

    IGUAL           reduce using rule 16 (tipo -> BOOL .)


state 28

    (17) tipo -> CHAR .

    IGUAL           reduce using rule 17 (tipo -> CHAR .)


state 29

    (18) tipo -> STRING .

    IGUAL           reduce using rule 18 (tipo -> STRING .)


state 30

    (19) tipo -> SIGNOI . STR

    STR             shift and go to state 47


state 31

    (22) expresion -> ID .

    PTCOMA          reduce using rule 22 (expresion -> ID .)
    COMA            reduce using rule 22 (expresion -> ID .)
    PARDER          reduce using rule 22 (expresion -> ID .)


state 32

    (13) declaracion -> LET ID IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 48


state 33

    (23) expresion -> ENTERO .

    PTCOMA          reduce using rule 23 (expresion -> ENTERO .)
    COMA            reduce using rule 23 (expresion -> ENTERO .)
    PARDER          reduce using rule 23 (expresion -> ENTERO .)


state 34

    (24) expresion -> DECIMAL .

    PTCOMA          reduce using rule 24 (expresion -> DECIMAL .)
    COMA            reduce using rule 24 (expresion -> DECIMAL .)
    PARDER          reduce using rule 24 (expresion -> DECIMAL .)


state 35

    (25) expresion -> TRUE .

    PTCOMA          reduce using rule 25 (expresion -> TRUE .)
    COMA            reduce using rule 25 (expresion -> TRUE .)
    PARDER          reduce using rule 25 (expresion -> TRUE .)


state 36

    (26) expresion -> FALSE .

    PTCOMA          reduce using rule 26 (expresion -> FALSE .)
    COMA            reduce using rule 26 (expresion -> FALSE .)
    PARDER          reduce using rule 26 (expresion -> FALSE .)


state 37

    (27) expresion -> tostring .

    PTCOMA          reduce using rule 27 (expresion -> tostring .)
    COMA            reduce using rule 27 (expresion -> tostring .)
    PARDER          reduce using rule 27 (expresion -> tostring .)


state 38

    (28) expresion -> toowned .

    PTCOMA          reduce using rule 28 (expresion -> toowned .)
    COMA            reduce using rule 28 (expresion -> toowned .)
    PARDER          reduce using rule 28 (expresion -> toowned .)


state 39

    (31) expresion -> STR .

    PTCOMA          reduce using rule 31 (expresion -> STR .)
    COMA            reduce using rule 31 (expresion -> STR .)
    PARDER          reduce using rule 31 (expresion -> STR .)


state 40

    (32) expresion -> CADENA .
    (29) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (30) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

    PTCOMA          reduce using rule 32 (expresion -> CADENA .)
    COMA            reduce using rule 32 (expresion -> CADENA .)
    PARDER          reduce using rule 32 (expresion -> CADENA .)
    PTO             shift and go to state 49


state 41

    (33) expresion -> CARACTER .

    PTCOMA          reduce using rule 33 (expresion -> CARACTER .)
    COMA            reduce using rule 33 (expresion -> CARACTER .)
    PARDER          reduce using rule 33 (expresion -> CARACTER .)


state 42

    (8) imprimir -> PRINTLN EX PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (9) imprimir -> PRINTLN EX PARIZQ expresion . PARDER PTCOMA

    COMA            shift and go to state 50
    PARDER          shift and go to state 51


state 43

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (10) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (11) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (12) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET ID IGUAL expresion PTCOMA
    (8) imprimir -> . PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA
    (9) imprimir -> . PRINTLN EX PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 8
    PRINTLN         shift and go to state 9

    instrucciones                  shift and go to state 52
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7

state 44

    (10) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 53


state 45

    (11) declaracion -> LET MUT ID IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 54


state 46

    (12) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (22) expresion -> . ID
    (23) expresion -> . ENTERO
    (24) expresion -> . DECIMAL
    (25) expresion -> . TRUE
    (26) expresion -> . FALSE
    (27) expresion -> . tostring
    (28) expresion -> . toowned
    (31) expresion -> . STR
    (32) expresion -> . CADENA
    (33) expresion -> . CARACTER
    (29) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (30) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    STR             shift and go to state 39
    CADENA          shift and go to state 40
    CARACTER        shift and go to state 41

    expresion                      shift and go to state 55
    tostring                       shift and go to state 37
    toowned                        shift and go to state 38

state 47

    (19) tipo -> SIGNOI STR .

    IGUAL           reduce using rule 19 (tipo -> SIGNOI STR .)


state 48

    (13) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 13 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 13 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 13 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 13 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 49

    (29) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (30) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 56
    TOOWNED         shift and go to state 57


state 50

    (8) imprimir -> PRINTLN EX PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (20) expresiones -> . expresiones COMA expresion
    (21) expresiones -> . expresion
    (22) expresion -> . ID
    (23) expresion -> . ENTERO
    (24) expresion -> . DECIMAL
    (25) expresion -> . TRUE
    (26) expresion -> . FALSE
    (27) expresion -> . tostring
    (28) expresion -> . toowned
    (31) expresion -> . STR
    (32) expresion -> . CADENA
    (33) expresion -> . CARACTER
    (29) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (30) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    STR             shift and go to state 39
    CADENA          shift and go to state 40
    CARACTER        shift and go to state 41

    expresion                      shift and go to state 58
    expresiones                    shift and go to state 59
    tostring                       shift and go to state 37
    toowned                        shift and go to state 38

state 51

    (9) imprimir -> PRINTLN EX PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 60


state 52

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (10) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (11) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (12) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET ID IGUAL expresion PTCOMA
    (8) imprimir -> . PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA
    (9) imprimir -> . PRINTLN EX PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 61
    LET             shift and go to state 8
    PRINTLN         shift and go to state 9

    instruccion                    shift and go to state 11
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7

state 53

    (10) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (22) expresion -> . ID
    (23) expresion -> . ENTERO
    (24) expresion -> . DECIMAL
    (25) expresion -> . TRUE
    (26) expresion -> . FALSE
    (27) expresion -> . tostring
    (28) expresion -> . toowned
    (31) expresion -> . STR
    (32) expresion -> . CADENA
    (33) expresion -> . CARACTER
    (29) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (30) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    STR             shift and go to state 39
    CADENA          shift and go to state 40
    CARACTER        shift and go to state 41

    expresion                      shift and go to state 62
    tostring                       shift and go to state 37
    toowned                        shift and go to state 38

state 54

    (11) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 11 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 11 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 11 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 11 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 55

    (12) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 63


state 56

    (29) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 64


state 57

    (30) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 65


state 58

    (21) expresiones -> expresion .

    PARDER          reduce using rule 21 (expresiones -> expresion .)
    COMA            reduce using rule 21 (expresiones -> expresion .)


state 59

    (8) imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (20) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 67
    COMA            shift and go to state 66


state 60

    (9) imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 9 (imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 9 (imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 9 (imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 9 (imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA .)


state 61

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    $end            reduce using rule 3 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 62

    (10) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 68


state 63

    (12) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 12 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 12 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 12 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 12 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 64

    (29) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 69


state 65

    (30) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 70


state 66

    (20) expresiones -> expresiones COMA . expresion
    (22) expresion -> . ID
    (23) expresion -> . ENTERO
    (24) expresion -> . DECIMAL
    (25) expresion -> . TRUE
    (26) expresion -> . FALSE
    (27) expresion -> . tostring
    (28) expresion -> . toowned
    (31) expresion -> . STR
    (32) expresion -> . CADENA
    (33) expresion -> . CARACTER
    (29) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (30) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    STR             shift and go to state 39
    CADENA          shift and go to state 40
    CARACTER        shift and go to state 41

    expresion                      shift and go to state 71
    tostring                       shift and go to state 37
    toowned                        shift and go to state 38

state 67

    (8) imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 72


state 68

    (10) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 10 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 10 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 10 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 10 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 69

    (29) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    PTCOMA          reduce using rule 29 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 29 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 29 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 70

    (30) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    PTCOMA          reduce using rule 30 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 30 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 30 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 71

    (20) expresiones -> expresiones COMA expresion .

    PARDER          reduce using rule 20 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 20 (expresiones -> expresiones COMA expresion .)


state 72

    (8) imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 8 (imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 8 (imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 8 (imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 8 (imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA .)

