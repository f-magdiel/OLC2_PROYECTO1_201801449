Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main
Rule 2     inicio -> main
Rule 3     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 4     instrucciones -> instrucciones instruccion
Rule 5     instrucciones -> instruccion
Rule 6     instruccion -> declaracion
Rule 7     instruccion -> imprimir
Rule 8     instruccion -> asignacion
Rule 9     instruccion -> if
Rule 10    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 11    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 12    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 13    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 14    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 15    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 16    asignacion -> ID IGUAL expresion PTCOMA
Rule 17    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 18    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 19    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 20    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 21    lelseif -> lelseif elseif
Rule 22    lelseif -> elseif
Rule 23    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 24    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 25    tipo -> I64
Rule 26    tipo -> F64
Rule 27    tipo -> BOOL
Rule 28    tipo -> CHAR
Rule 29    tipo -> STRING
Rule 30    tipo -> SIGNOI STR
Rule 31    expresiones -> expresiones COMA expresion
Rule 32    expresiones -> expresion
Rule 33    expresion -> ID
Rule 34    expresion -> ENTERO
Rule 35    expresion -> DECIMAL
Rule 36    expresion -> TRUE
Rule 37    expresion -> FALSE
Rule 38    expresion -> tostring
Rule 39    expresion -> toowned
Rule 40    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 41    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 42    expresion -> STR
Rule 43    expresion -> CADENA
Rule 44    expresion -> CARACTER
Rule 45    expresion -> expresion MAS expresion
Rule 46    expresion -> expresion MENOS expresion
Rule 47    expresion -> expresion POR expresion
Rule 48    expresion -> expresion DIVIDIDO expresion
Rule 49    expresion -> expresion MODULO expresion
Rule 50    expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 51    expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 52    expresion -> expresion IGUALQUE expresion
Rule 53    expresion -> expresion NOIGUALQUE expresion
Rule 54    expresion -> expresion MENORQUE expresion
Rule 55    expresion -> expresion MAYORQUE expresion
Rule 56    expresion -> expresion MENORIQUE expresion
Rule 57    expresion -> expresion MAYORIQUE expresion
Rule 58    expresion -> expresion OR expresion
Rule 59    expresion -> expresion AND expresion
Rule 60    expresion -> MENOS expresion
Rule 61    expresion -> NOT expresion
Rule 62    expresion -> PARIZQ expresion PARDER
Rule 63    expresion -> if_asig
Rule 64    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 65    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
Rule 66    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
Rule 67    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
Rule 68    elseif -> elseif lif
Rule 69    elseif -> lif
Rule 70    lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 71    else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 72    bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 73    bloque_expresion -> expresion

Terminals, with rules where they appear

AND                  : 59
AS                   : 
BOOL                 : 27
CADENA               : 40 41 43
CARACTER             : 44
CHAR                 : 28
COMA                 : 10 31 50 51
DECIMAL              : 35
DIVIDIDO             : 48
DOSPT                : 12 14 50 50 51 51
ELSE                 : 23 24 70 71
ENTERO               : 34
F64                  : 26
FALSE                : 37
FN                   : 3
I64                  : 25
ID                   : 12 13 14 15 16 33
IF                   : 17 18 19 20 23 64 65 66 67 70
IGUAL                : 12 13 14 15 16
IGUALQUE             : 52
LET                  : 12 13 14 15
LLAVEDER             : 3 17 18 19 20 23 24 64 65 66 67 70 71
LLAVEIZQ             : 3 17 18 19 20 23 24 64 65 66 67 70 71
MAIN                 : 3
MAS                  : 45
MAYORIQUE            : 57
MAYORQUE             : 55
MENORIQUE            : 56
MENORQUE             : 54
MENOS                : 46 60
MODULO               : 49
MUT                  : 12 13
NOIGUALQUE           : 53
NOT                  : 10 11 61
OR                   : 58
PARDER               : 3 10 11 40 41 50 51 62
PARIZQ               : 3 10 11 40 41 50 51 62
POR                  : 47
POW                  : 50
POWF                 : 51
PRINTLN              : 10 11
PTCOMA               : 10 11 12 13 14 15 16 72
PTO                  : 40 41
SIGNOI               : 30
STR                  : 30 42
STRING               : 29
TOOWNED              : 41
TOSTRING             : 40
TRUE                 : 36
error                : 

Nonterminals, with rules where they appear

asignacion           : 8
bloque_expresion     : 64 65 66 67 70 71 72
declaracion          : 6
else                 : 18 20 65 67
elseif               : 21 22 66 67 68
expresion            : 10 11 12 13 14 15 16 17 18 19 20 23 31 32 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 61 62 64 65 66 67 70 72 73
expresiones          : 10 31
if                   : 9
if_asig              : 63
imprimir             : 7
inicio               : 0
instruccion          : 4 5
instrucciones        : 1 3 4 17 18 19 20 23 24
lelseif              : 19 20 21
lif                  : 68 69
main                 : 1 2
tipo                 : 12 14 50 51
toowned              : 39
tostring             : 38

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main
    (2) inicio -> . main
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (12) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID IGUAL expresion PTCOMA
    (10) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (16) asignacion -> . ID IGUAL expresion PTCOMA
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    FN              shift and go to state 5
    LET             shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 11
    IF              shift and go to state 13

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main
    (4) instrucciones -> instrucciones . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (12) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID IGUAL expresion PTCOMA
    (10) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (16) asignacion -> . ID IGUAL expresion PTCOMA
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    FN              shift and go to state 5
    LET             shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 11
    IF              shift and go to state 13

    main                           shift and go to state 14
    instruccion                    shift and go to state 15
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9

state 3

    (2) inicio -> main .

    $end            reduce using rule 2 (inicio -> main .)


state 4

    (5) instrucciones -> instruccion .

    FN              reduce using rule 5 (instrucciones -> instruccion .)
    LET             reduce using rule 5 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 5 (instrucciones -> instruccion .)
    ID              reduce using rule 5 (instrucciones -> instruccion .)
    IF              reduce using rule 5 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 5 (instrucciones -> instruccion .)


state 5

    (3) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 16


state 6

    (6) instruccion -> declaracion .

    FN              reduce using rule 6 (instruccion -> declaracion .)
    LET             reduce using rule 6 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 6 (instruccion -> declaracion .)
    ID              reduce using rule 6 (instruccion -> declaracion .)
    IF              reduce using rule 6 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 6 (instruccion -> declaracion .)


state 7

    (7) instruccion -> imprimir .

    FN              reduce using rule 7 (instruccion -> imprimir .)
    LET             reduce using rule 7 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 7 (instruccion -> imprimir .)
    ID              reduce using rule 7 (instruccion -> imprimir .)
    IF              reduce using rule 7 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 7 (instruccion -> imprimir .)


state 8

    (8) instruccion -> asignacion .

    FN              reduce using rule 8 (instruccion -> asignacion .)
    LET             reduce using rule 8 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 8 (instruccion -> asignacion .)
    ID              reduce using rule 8 (instruccion -> asignacion .)
    IF              reduce using rule 8 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 8 (instruccion -> asignacion .)


state 9

    (9) instruccion -> if .

    FN              reduce using rule 9 (instruccion -> if .)
    LET             reduce using rule 9 (instruccion -> if .)
    PRINTLN         reduce using rule 9 (instruccion -> if .)
    ID              reduce using rule 9 (instruccion -> if .)
    IF              reduce using rule 9 (instruccion -> if .)
    LLAVEDER        reduce using rule 9 (instruccion -> if .)


state 10

    (12) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (14) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> LET . ID IGUAL expresion PTCOMA

    MUT             shift and go to state 17
    ID              shift and go to state 18


state 11

    (16) asignacion -> ID . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 19


state 12

    (10) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 20


state 13

    (17) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 22
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 14

    (1) inicio -> instrucciones main .

    $end            reduce using rule 1 (inicio -> instrucciones main .)


state 15

    (4) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 4 (instrucciones -> instrucciones instruccion .)


state 16

    (3) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 44


state 17

    (12) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> LET MUT . ID IGUAL expresion PTCOMA

    ID              shift and go to state 45


state 18

    (14) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 46
    IGUAL           shift and go to state 47


state 19

    (16) asignacion -> ID IGUAL . expresion PTCOMA
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 48
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 20

    (10) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 49


state 21

    (64) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 50
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 22

    (17) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (18) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 51
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 23

    (33) expresion -> ID .

    LLAVEIZQ        reduce using rule 33 (expresion -> ID .)
    MAS             reduce using rule 33 (expresion -> ID .)
    MENOS           reduce using rule 33 (expresion -> ID .)
    POR             reduce using rule 33 (expresion -> ID .)
    DIVIDIDO        reduce using rule 33 (expresion -> ID .)
    MODULO          reduce using rule 33 (expresion -> ID .)
    IGUALQUE        reduce using rule 33 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 33 (expresion -> ID .)
    MENORQUE        reduce using rule 33 (expresion -> ID .)
    MAYORQUE        reduce using rule 33 (expresion -> ID .)
    MENORIQUE       reduce using rule 33 (expresion -> ID .)
    MAYORIQUE       reduce using rule 33 (expresion -> ID .)
    OR              reduce using rule 33 (expresion -> ID .)
    AND             reduce using rule 33 (expresion -> ID .)
    PTCOMA          reduce using rule 33 (expresion -> ID .)
    PARDER          reduce using rule 33 (expresion -> ID .)
    COMA            reduce using rule 33 (expresion -> ID .)
    LLAVEDER        reduce using rule 33 (expresion -> ID .)


state 24

    (34) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 34 (expresion -> ENTERO .)
    MAS             reduce using rule 34 (expresion -> ENTERO .)
    MENOS           reduce using rule 34 (expresion -> ENTERO .)
    POR             reduce using rule 34 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 34 (expresion -> ENTERO .)
    MODULO          reduce using rule 34 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 34 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 34 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 34 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 34 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 34 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 34 (expresion -> ENTERO .)
    OR              reduce using rule 34 (expresion -> ENTERO .)
    AND             reduce using rule 34 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 34 (expresion -> ENTERO .)
    PARDER          reduce using rule 34 (expresion -> ENTERO .)
    COMA            reduce using rule 34 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 34 (expresion -> ENTERO .)


state 25

    (35) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 35 (expresion -> DECIMAL .)
    MAS             reduce using rule 35 (expresion -> DECIMAL .)
    MENOS           reduce using rule 35 (expresion -> DECIMAL .)
    POR             reduce using rule 35 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 35 (expresion -> DECIMAL .)
    MODULO          reduce using rule 35 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 35 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 35 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 35 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 35 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 35 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 35 (expresion -> DECIMAL .)
    OR              reduce using rule 35 (expresion -> DECIMAL .)
    AND             reduce using rule 35 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 35 (expresion -> DECIMAL .)
    PARDER          reduce using rule 35 (expresion -> DECIMAL .)
    COMA            reduce using rule 35 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 35 (expresion -> DECIMAL .)


state 26

    (36) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 36 (expresion -> TRUE .)
    MAS             reduce using rule 36 (expresion -> TRUE .)
    MENOS           reduce using rule 36 (expresion -> TRUE .)
    POR             reduce using rule 36 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 36 (expresion -> TRUE .)
    MODULO          reduce using rule 36 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 36 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 36 (expresion -> TRUE .)
    MENORQUE        reduce using rule 36 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 36 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 36 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 36 (expresion -> TRUE .)
    OR              reduce using rule 36 (expresion -> TRUE .)
    AND             reduce using rule 36 (expresion -> TRUE .)
    PTCOMA          reduce using rule 36 (expresion -> TRUE .)
    PARDER          reduce using rule 36 (expresion -> TRUE .)
    COMA            reduce using rule 36 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 36 (expresion -> TRUE .)


state 27

    (37) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 37 (expresion -> FALSE .)
    MAS             reduce using rule 37 (expresion -> FALSE .)
    MENOS           reduce using rule 37 (expresion -> FALSE .)
    POR             reduce using rule 37 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 37 (expresion -> FALSE .)
    MODULO          reduce using rule 37 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 37 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 37 (expresion -> FALSE .)
    MENORQUE        reduce using rule 37 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 37 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 37 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 37 (expresion -> FALSE .)
    OR              reduce using rule 37 (expresion -> FALSE .)
    AND             reduce using rule 37 (expresion -> FALSE .)
    PTCOMA          reduce using rule 37 (expresion -> FALSE .)
    PARDER          reduce using rule 37 (expresion -> FALSE .)
    COMA            reduce using rule 37 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 37 (expresion -> FALSE .)


state 28

    (38) expresion -> tostring .

    LLAVEIZQ        reduce using rule 38 (expresion -> tostring .)
    MAS             reduce using rule 38 (expresion -> tostring .)
    MENOS           reduce using rule 38 (expresion -> tostring .)
    POR             reduce using rule 38 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 38 (expresion -> tostring .)
    MODULO          reduce using rule 38 (expresion -> tostring .)
    IGUALQUE        reduce using rule 38 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 38 (expresion -> tostring .)
    MENORQUE        reduce using rule 38 (expresion -> tostring .)
    MAYORQUE        reduce using rule 38 (expresion -> tostring .)
    MENORIQUE       reduce using rule 38 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 38 (expresion -> tostring .)
    OR              reduce using rule 38 (expresion -> tostring .)
    AND             reduce using rule 38 (expresion -> tostring .)
    PTCOMA          reduce using rule 38 (expresion -> tostring .)
    PARDER          reduce using rule 38 (expresion -> tostring .)
    COMA            reduce using rule 38 (expresion -> tostring .)
    LLAVEDER        reduce using rule 38 (expresion -> tostring .)


state 29

    (39) expresion -> toowned .

    LLAVEIZQ        reduce using rule 39 (expresion -> toowned .)
    MAS             reduce using rule 39 (expresion -> toowned .)
    MENOS           reduce using rule 39 (expresion -> toowned .)
    POR             reduce using rule 39 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 39 (expresion -> toowned .)
    MODULO          reduce using rule 39 (expresion -> toowned .)
    IGUALQUE        reduce using rule 39 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 39 (expresion -> toowned .)
    MENORQUE        reduce using rule 39 (expresion -> toowned .)
    MAYORQUE        reduce using rule 39 (expresion -> toowned .)
    MENORIQUE       reduce using rule 39 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 39 (expresion -> toowned .)
    OR              reduce using rule 39 (expresion -> toowned .)
    AND             reduce using rule 39 (expresion -> toowned .)
    PTCOMA          reduce using rule 39 (expresion -> toowned .)
    PARDER          reduce using rule 39 (expresion -> toowned .)
    COMA            reduce using rule 39 (expresion -> toowned .)
    LLAVEDER        reduce using rule 39 (expresion -> toowned .)


state 30

    (42) expresion -> STR .

    LLAVEIZQ        reduce using rule 42 (expresion -> STR .)
    MAS             reduce using rule 42 (expresion -> STR .)
    MENOS           reduce using rule 42 (expresion -> STR .)
    POR             reduce using rule 42 (expresion -> STR .)
    DIVIDIDO        reduce using rule 42 (expresion -> STR .)
    MODULO          reduce using rule 42 (expresion -> STR .)
    IGUALQUE        reduce using rule 42 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 42 (expresion -> STR .)
    MENORQUE        reduce using rule 42 (expresion -> STR .)
    MAYORQUE        reduce using rule 42 (expresion -> STR .)
    MENORIQUE       reduce using rule 42 (expresion -> STR .)
    MAYORIQUE       reduce using rule 42 (expresion -> STR .)
    OR              reduce using rule 42 (expresion -> STR .)
    AND             reduce using rule 42 (expresion -> STR .)
    PTCOMA          reduce using rule 42 (expresion -> STR .)
    PARDER          reduce using rule 42 (expresion -> STR .)
    COMA            reduce using rule 42 (expresion -> STR .)
    LLAVEDER        reduce using rule 42 (expresion -> STR .)


state 31

    (43) expresion -> CADENA .
    (40) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (41) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

    LLAVEIZQ        reduce using rule 43 (expresion -> CADENA .)
    MAS             reduce using rule 43 (expresion -> CADENA .)
    MENOS           reduce using rule 43 (expresion -> CADENA .)
    POR             reduce using rule 43 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 43 (expresion -> CADENA .)
    MODULO          reduce using rule 43 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 43 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 43 (expresion -> CADENA .)
    MENORQUE        reduce using rule 43 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 43 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 43 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 43 (expresion -> CADENA .)
    OR              reduce using rule 43 (expresion -> CADENA .)
    AND             reduce using rule 43 (expresion -> CADENA .)
    PTCOMA          reduce using rule 43 (expresion -> CADENA .)
    PARDER          reduce using rule 43 (expresion -> CADENA .)
    COMA            reduce using rule 43 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 43 (expresion -> CADENA .)
    PTO             shift and go to state 65


state 32

    (44) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 44 (expresion -> CARACTER .)
    MAS             reduce using rule 44 (expresion -> CARACTER .)
    MENOS           reduce using rule 44 (expresion -> CARACTER .)
    POR             reduce using rule 44 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 44 (expresion -> CARACTER .)
    MODULO          reduce using rule 44 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 44 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 44 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 44 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 44 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 44 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 44 (expresion -> CARACTER .)
    OR              reduce using rule 44 (expresion -> CARACTER .)
    AND             reduce using rule 44 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 44 (expresion -> CARACTER .)
    PARDER          reduce using rule 44 (expresion -> CARACTER .)
    COMA            reduce using rule 44 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 44 (expresion -> CARACTER .)


state 33

    (60) expresion -> MENOS . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 66
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 34

    (50) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 67


state 35

    (62) expresion -> PARIZQ . expresion PARDER
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 68
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 36

    (61) expresion -> NOT . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 69
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 37

    (63) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 63 (expresion -> if_asig .)
    MAS             reduce using rule 63 (expresion -> if_asig .)
    MENOS           reduce using rule 63 (expresion -> if_asig .)
    POR             reduce using rule 63 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 63 (expresion -> if_asig .)
    MODULO          reduce using rule 63 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 63 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 63 (expresion -> if_asig .)
    MENORQUE        reduce using rule 63 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 63 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 63 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 63 (expresion -> if_asig .)
    OR              reduce using rule 63 (expresion -> if_asig .)
    AND             reduce using rule 63 (expresion -> if_asig .)
    PTCOMA          reduce using rule 63 (expresion -> if_asig .)
    PARDER          reduce using rule 63 (expresion -> if_asig .)
    COMA            reduce using rule 63 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 63 (expresion -> if_asig .)


state 38

    (25) tipo -> I64 .

    DOSPT           reduce using rule 25 (tipo -> I64 .)
    IGUAL           reduce using rule 25 (tipo -> I64 .)


state 39

    (26) tipo -> F64 .

    DOSPT           reduce using rule 26 (tipo -> F64 .)
    IGUAL           reduce using rule 26 (tipo -> F64 .)


state 40

    (27) tipo -> BOOL .

    DOSPT           reduce using rule 27 (tipo -> BOOL .)
    IGUAL           reduce using rule 27 (tipo -> BOOL .)


state 41

    (28) tipo -> CHAR .

    DOSPT           reduce using rule 28 (tipo -> CHAR .)
    IGUAL           reduce using rule 28 (tipo -> CHAR .)


state 42

    (29) tipo -> STRING .

    DOSPT           reduce using rule 29 (tipo -> STRING .)
    IGUAL           reduce using rule 29 (tipo -> STRING .)


state 43

    (30) tipo -> SIGNOI . STR

    STR             shift and go to state 70


state 44

    (3) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 71


state 45

    (12) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> LET MUT ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 72
    IGUAL           shift and go to state 73


state 46

    (14) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR

    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43

    tipo                           shift and go to state 74

state 47

    (15) declaracion -> LET ID IGUAL . expresion PTCOMA
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 75
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 48

    (16) asignacion -> ID IGUAL expresion . PTCOMA
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 76
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 49

    (10) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 77
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 50

    (64) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 78
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 51

    (17) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (18) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (19) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (20) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (12) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID IGUAL expresion PTCOMA
    (10) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (16) asignacion -> . ID IGUAL expresion PTCOMA
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    LET             shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 11
    IF              shift and go to state 13

    instrucciones                  shift and go to state 79
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9

state 52

    (45) expresion -> expresion MAS . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 80
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 53

    (46) expresion -> expresion MENOS . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 81
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 54

    (47) expresion -> expresion POR . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 82
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 55

    (48) expresion -> expresion DIVIDIDO . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 83
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 56

    (49) expresion -> expresion MODULO . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 84
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 57

    (52) expresion -> expresion IGUALQUE . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 85
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 58

    (53) expresion -> expresion NOIGUALQUE . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 86
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 59

    (54) expresion -> expresion MENORQUE . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 87
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 60

    (55) expresion -> expresion MAYORQUE . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 88
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 61

    (56) expresion -> expresion MENORIQUE . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 89
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 62

    (57) expresion -> expresion MAYORIQUE . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 90
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 63

    (58) expresion -> expresion OR . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 91
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 64

    (59) expresion -> expresion AND . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 92
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 65

    (40) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (41) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 93
    TOOWNED         shift and go to state 94


state 66

    (60) expresion -> MENOS expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 60 (expresion -> MENOS expresion .)
    MAS             reduce using rule 60 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 60 (expresion -> MENOS expresion .)
    POR             reduce using rule 60 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 60 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 60 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 60 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 60 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 60 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 60 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 60 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 60 (expresion -> MENOS expresion .)
    OR              reduce using rule 60 (expresion -> MENOS expresion .)
    AND             reduce using rule 60 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 60 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 60 (expresion -> MENOS expresion .)
    COMA            reduce using rule 60 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 60 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! MODULO          [ shift and go to state 56 ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 67

    (50) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 95


state 68

    (62) expresion -> PARIZQ expresion . PARDER
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    PARDER          shift and go to state 96
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 69

    (61) expresion -> NOT expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 61 (expresion -> NOT expresion .)
    MAS             reduce using rule 61 (expresion -> NOT expresion .)
    MENOS           reduce using rule 61 (expresion -> NOT expresion .)
    POR             reduce using rule 61 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 61 (expresion -> NOT expresion .)
    MODULO          reduce using rule 61 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 61 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 61 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 61 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 61 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 61 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 61 (expresion -> NOT expresion .)
    OR              reduce using rule 61 (expresion -> NOT expresion .)
    AND             reduce using rule 61 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 61 (expresion -> NOT expresion .)
    PARDER          reduce using rule 61 (expresion -> NOT expresion .)
    COMA            reduce using rule 61 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 61 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! MODULO          [ shift and go to state 56 ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 70

    (30) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 30 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 30 (tipo -> SIGNOI STR .)


state 71

    (3) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 97


state 72

    (12) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR

    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43

    tipo                           shift and go to state 98

state 73

    (13) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 99
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 74

    (14) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 100


state 75

    (15) declaracion -> LET ID IGUAL expresion . PTCOMA
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 101
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 76

    (16) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 16 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 16 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 16 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 16 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 16 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 16 (asignacion -> ID IGUAL expresion PTCOMA .)


state 77

    (10) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (11) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    COMA            shift and go to state 102
    PARDER          shift and go to state 103
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 78

    (64) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (65) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER else
    (66) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif
    (67) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif else
    (72) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (73) bloque_expresion -> . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 104
    bloque_expresion               shift and go to state 105
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 79

    (17) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (18) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (19) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (20) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (12) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID IGUAL expresion PTCOMA
    (10) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (16) asignacion -> . ID IGUAL expresion PTCOMA
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    LLAVEDER        shift and go to state 106
    LET             shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 11
    IF              shift and go to state 13

    instruccion                    shift and go to state 15
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9

state 80

    (45) expresion -> expresion MAS expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 45 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 45 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 45 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 45 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 45 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 45 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 45 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 45 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 45 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 45 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 45 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 45 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 45 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 45 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 45 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56

  ! POR             [ reduce using rule 45 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 45 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 45 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 81

    (46) expresion -> expresion MENOS expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 46 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 46 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 46 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 46 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 46 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 46 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 46 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 46 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 46 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 46 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56

  ! POR             [ reduce using rule 46 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 46 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 46 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 82

    (47) expresion -> expresion POR expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 47 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 47 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 47 (expresion -> expresion POR expresion .)
    POR             reduce using rule 47 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 47 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 47 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 47 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 47 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 47 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 47 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 47 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 47 (expresion -> expresion POR expresion .)
    OR              reduce using rule 47 (expresion -> expresion POR expresion .)
    AND             reduce using rule 47 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 47 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 47 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 47 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 47 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! MODULO          [ shift and go to state 56 ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 83

    (48) expresion -> expresion DIVIDIDO expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 48 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! MODULO          [ shift and go to state 56 ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 84

    (49) expresion -> expresion MODULO expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 49 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 49 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 49 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 49 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 49 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 49 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 49 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 49 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 49 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 49 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 49 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 49 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! MODULO          [ shift and go to state 56 ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 85

    (52) expresion -> expresion IGUALQUE expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 52 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56

  ! MAS             [ reduce using rule 52 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 52 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 52 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 52 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 52 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 86

    (53) expresion -> expresion NOIGUALQUE expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56

  ! MAS             [ reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 53 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 87

    (54) expresion -> expresion MENORQUE expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 54 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56

  ! MAS             [ reduce using rule 54 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 54 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 54 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 54 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 54 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 88

    (55) expresion -> expresion MAYORQUE expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 55 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56

  ! MAS             [ reduce using rule 55 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 55 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 55 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 55 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 55 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 89

    (56) expresion -> expresion MENORIQUE expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 56 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56

  ! MAS             [ reduce using rule 56 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 56 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 56 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 56 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 56 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 90

    (57) expresion -> expresion MAYORIQUE expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56

  ! MAS             [ reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 57 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 57 ]
  ! NOIGUALQUE      [ shift and go to state 58 ]
  ! MENORQUE        [ shift and go to state 59 ]
  ! MAYORQUE        [ shift and go to state 60 ]
  ! MENORIQUE       [ shift and go to state 61 ]
  ! MAYORIQUE       [ shift and go to state 62 ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 91

    (58) expresion -> expresion OR expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 58 (expresion -> expresion OR expresion .)
    OR              reduce using rule 58 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 58 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 58 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 58 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 58 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    AND             shift and go to state 64

  ! MAS             [ reduce using rule 58 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 58 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 58 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 58 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 58 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 58 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 58 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 58 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 58 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 58 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 58 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 58 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 63 ]


state 92

    (59) expresion -> expresion AND expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 59 (expresion -> expresion AND expresion .)
    OR              reduce using rule 59 (expresion -> expresion AND expresion .)
    AND             reduce using rule 59 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 59 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 59 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 59 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 59 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62

  ! MAS             [ reduce using rule 59 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 59 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 59 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 59 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 59 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 59 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 59 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 59 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 59 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 59 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 59 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]


state 93

    (40) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 107


state 94

    (41) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 108


state 95

    (50) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 109
    POWF            shift and go to state 110


state 96

    (62) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 62 (expresion -> PARIZQ expresion PARDER .)


state 97

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (12) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID IGUAL expresion PTCOMA
    (10) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (16) asignacion -> . ID IGUAL expresion PTCOMA
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    LET             shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 11
    IF              shift and go to state 13

    instrucciones                  shift and go to state 111
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9

state 98

    (12) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 112


state 99

    (13) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 113
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 100

    (14) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    tipo                           shift and go to state 34
    expresion                      shift and go to state 114
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    if_asig                        shift and go to state 37

state 101

    (15) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 15 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 15 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 15 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 15 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 15 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 15 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 102

    (10) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (31) expresiones -> . expresiones COMA expresion
    (32) expresiones -> . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 115
    expresiones                    shift and go to state 116
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 103

    (11) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 117


state 104

    (73) bloque_expresion -> expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 73 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 73 (bloque_expresion -> expresion .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 105

    (64) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (65) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER else
    (66) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseif
    (67) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseif else
    (72) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 118
    PTCOMA          shift and go to state 119


state 106

    (17) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (18) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (19) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (20) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (24) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (71) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (21) lelseif -> . lelseif elseif
    (22) lelseif -> . elseif
    (23) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
    (68) elseif -> . elseif lif
    (69) elseif -> . lif
    (70) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    FN              reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 122

    else                           shift and go to state 120
    lelseif                        shift and go to state 121
    elseif                         shift and go to state 123
    lif                            shift and go to state 124

state 107

    (40) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 125


state 108

    (41) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 126


state 109

    (50) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 127


state 110

    (51) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 128


state 111

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (12) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID IGUAL expresion PTCOMA
    (10) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (16) asignacion -> . ID IGUAL expresion PTCOMA
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    LLAVEDER        shift and go to state 129
    LET             shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 11
    IF              shift and go to state 13

    instruccion                    shift and go to state 15
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9

state 112

    (12) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    tipo                           shift and go to state 34
    expresion                      shift and go to state 130
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    if_asig                        shift and go to state 37

state 113

    (13) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 13 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 13 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 13 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 13 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 13 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 13 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 114

    (14) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 131
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 115

    (32) expresiones -> expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    PARDER          reduce using rule 32 (expresiones -> expresion .)
    COMA            reduce using rule 32 (expresiones -> expresion .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 116

    (10) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (31) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 133
    COMA            shift and go to state 132


state 117

    (11) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 118

    (64) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (65) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . else
    (66) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseif
    (67) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseif else
    (24) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (71) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (23) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
    (68) elseif -> . elseif lif
    (69) elseif -> . lif
    (70) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 64 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 122

    else                           shift and go to state 134
    elseif                         shift and go to state 135
    lif                            shift and go to state 124

state 119

    (72) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 136
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 120

    (18) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 121

    (19) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (20) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (21) lelseif -> lelseif . elseif
    (24) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (71) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (23) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
    (68) elseif -> . elseif lif
    (69) elseif -> . lif
    (70) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    FN              reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 122

    else                           shift and go to state 137
    elseif                         shift and go to state 138
    lif                            shift and go to state 124

state 122

    (24) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (71) else -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (23) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (70) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 139
    IF              shift and go to state 140


state 123

    (22) lelseif -> elseif .
    (68) elseif -> elseif . lif
    (70) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

  ! shift/reduce conflict for ELSE resolved as shift
    FN              reduce using rule 22 (lelseif -> elseif .)
    LET             reduce using rule 22 (lelseif -> elseif .)
    PRINTLN         reduce using rule 22 (lelseif -> elseif .)
    ID              reduce using rule 22 (lelseif -> elseif .)
    IF              reduce using rule 22 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 22 (lelseif -> elseif .)
    ELSE            shift and go to state 142

  ! ELSE            [ reduce using rule 22 (lelseif -> elseif .) ]

    lif                            shift and go to state 141

state 124

    (69) elseif -> lif .

    ELSE            reduce using rule 69 (elseif -> lif .)
    FN              reduce using rule 69 (elseif -> lif .)
    LET             reduce using rule 69 (elseif -> lif .)
    PRINTLN         reduce using rule 69 (elseif -> lif .)
    ID              reduce using rule 69 (elseif -> lif .)
    IF              reduce using rule 69 (elseif -> lif .)
    LLAVEDER        reduce using rule 69 (elseif -> lif .)
    LLAVEIZQ        reduce using rule 69 (elseif -> lif .)
    MAS             reduce using rule 69 (elseif -> lif .)
    MENOS           reduce using rule 69 (elseif -> lif .)
    POR             reduce using rule 69 (elseif -> lif .)
    DIVIDIDO        reduce using rule 69 (elseif -> lif .)
    MODULO          reduce using rule 69 (elseif -> lif .)
    IGUALQUE        reduce using rule 69 (elseif -> lif .)
    NOIGUALQUE      reduce using rule 69 (elseif -> lif .)
    MENORQUE        reduce using rule 69 (elseif -> lif .)
    MAYORQUE        reduce using rule 69 (elseif -> lif .)
    MENORIQUE       reduce using rule 69 (elseif -> lif .)
    MAYORIQUE       reduce using rule 69 (elseif -> lif .)
    OR              reduce using rule 69 (elseif -> lif .)
    AND             reduce using rule 69 (elseif -> lif .)
    PTCOMA          reduce using rule 69 (elseif -> lif .)
    PARDER          reduce using rule 69 (elseif -> lif .)
    COMA            reduce using rule 69 (elseif -> lif .)


state 125

    (40) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 40 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 126

    (41) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 41 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 127

    (50) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    tipo                           shift and go to state 34
    expresion                      shift and go to state 143
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    if_asig                        shift and go to state 37

state 128

    (51) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    tipo                           shift and go to state 34
    expresion                      shift and go to state 144
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    if_asig                        shift and go to state 37

state 129

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    $end            reduce using rule 3 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 130

    (12) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 145
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 131

    (14) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 14 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 14 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 14 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 14 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 14 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 14 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 132

    (31) expresiones -> expresiones COMA . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 146
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 133

    (10) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 147


state 134

    (65) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .

    LLAVEIZQ        reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MAS             reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MENOS           reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    POR             reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    DIVIDIDO        reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MODULO          reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    IGUALQUE        reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    NOIGUALQUE      reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MENORQUE        reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MAYORQUE        reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MENORIQUE       reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MAYORIQUE       reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    OR              reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    AND             reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    PTCOMA          reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    PARDER          reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    COMA            reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    LLAVEDER        reduce using rule 65 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)


state 135

    (66) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .
    (67) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif . else
    (68) elseif -> elseif . lif
    (24) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (71) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (70) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MAS             reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MENOS           reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    POR             reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    DIVIDIDO        reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MODULO          reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    IGUALQUE        reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    NOIGUALQUE      reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MENORQUE        reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MAYORQUE        reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MENORIQUE       reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MAYORIQUE       reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    OR              reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    AND             reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    PTCOMA          reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    PARDER          reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    COMA            reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    LLAVEDER        reduce using rule 66 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    ELSE            shift and go to state 149

    else                           shift and go to state 148
    lif                            shift and go to state 141

state 136

    (72) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 72 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 72 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 137

    (20) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 138

    (21) lelseif -> lelseif elseif .
    (68) elseif -> elseif . lif
    (70) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

  ! shift/reduce conflict for ELSE resolved as shift
    FN              reduce using rule 21 (lelseif -> lelseif elseif .)
    LET             reduce using rule 21 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 21 (lelseif -> lelseif elseif .)
    ID              reduce using rule 21 (lelseif -> lelseif elseif .)
    IF              reduce using rule 21 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 21 (lelseif -> lelseif elseif .)
    ELSE            shift and go to state 142

  ! ELSE            [ reduce using rule 21 (lelseif -> lelseif elseif .) ]

    lif                            shift and go to state 141

state 139

    (24) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (71) else -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (72) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (73) bloque_expresion -> . expresion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (12) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID IGUAL expresion PTCOMA
    (10) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (16) asignacion -> . ID IGUAL expresion PTCOMA
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 152
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    LET             shift and go to state 10
    PRINTLN         shift and go to state 12
    IF              shift and go to state 153
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43

    instrucciones                  shift and go to state 150
    bloque_expresion               shift and go to state 151
    instruccion                    shift and go to state 4
    expresion                      shift and go to state 104
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 140

    (23) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (70) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 154
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 141

    (68) elseif -> elseif lif .

    ELSE            reduce using rule 68 (elseif -> elseif lif .)
    FN              reduce using rule 68 (elseif -> elseif lif .)
    LET             reduce using rule 68 (elseif -> elseif lif .)
    PRINTLN         reduce using rule 68 (elseif -> elseif lif .)
    ID              reduce using rule 68 (elseif -> elseif lif .)
    IF              reduce using rule 68 (elseif -> elseif lif .)
    LLAVEDER        reduce using rule 68 (elseif -> elseif lif .)
    LLAVEIZQ        reduce using rule 68 (elseif -> elseif lif .)
    MAS             reduce using rule 68 (elseif -> elseif lif .)
    MENOS           reduce using rule 68 (elseif -> elseif lif .)
    POR             reduce using rule 68 (elseif -> elseif lif .)
    DIVIDIDO        reduce using rule 68 (elseif -> elseif lif .)
    MODULO          reduce using rule 68 (elseif -> elseif lif .)
    IGUALQUE        reduce using rule 68 (elseif -> elseif lif .)
    NOIGUALQUE      reduce using rule 68 (elseif -> elseif lif .)
    MENORQUE        reduce using rule 68 (elseif -> elseif lif .)
    MAYORQUE        reduce using rule 68 (elseif -> elseif lif .)
    MENORIQUE       reduce using rule 68 (elseif -> elseif lif .)
    MAYORIQUE       reduce using rule 68 (elseif -> elseif lif .)
    OR              reduce using rule 68 (elseif -> elseif lif .)
    AND             reduce using rule 68 (elseif -> elseif lif .)
    PTCOMA          reduce using rule 68 (elseif -> elseif lif .)
    PARDER          reduce using rule 68 (elseif -> elseif lif .)
    COMA            reduce using rule 68 (elseif -> elseif lif .)


state 142

    (70) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    IF              shift and go to state 155


state 143

    (50) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    COMA            shift and go to state 156
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 144

    (51) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    COMA            shift and go to state 157
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 145

    (12) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 12 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 12 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 12 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 12 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 12 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 12 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 146

    (31) expresiones -> expresiones COMA expresion .
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    PARDER          reduce using rule 31 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 31 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 147

    (10) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 10 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 10 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 10 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 10 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 10 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 10 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 148

    (67) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .

    LLAVEIZQ        reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MAS             reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MENOS           reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    POR             reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    DIVIDIDO        reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MODULO          reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    IGUALQUE        reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    NOIGUALQUE      reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MENORQUE        reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MAYORQUE        reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MENORIQUE       reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MAYORIQUE       reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    OR              reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    AND             reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    PTCOMA          reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    PARDER          reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    COMA            reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    LLAVEDER        reduce using rule 67 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)


state 149

    (24) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (71) else -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (70) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 139
    IF              shift and go to state 155


state 150

    (24) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (12) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID IGUAL expresion PTCOMA
    (10) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (16) asignacion -> . ID IGUAL expresion PTCOMA
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    LLAVEDER        shift and go to state 158
    LET             shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 11
    IF              shift and go to state 13

    instruccion                    shift and go to state 15
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9

state 151

    (71) else -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (72) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 159
    PTCOMA          shift and go to state 119


state 152

    (33) expresion -> ID .
    (16) asignacion -> ID . IGUAL expresion PTCOMA

    MAS             reduce using rule 33 (expresion -> ID .)
    MENOS           reduce using rule 33 (expresion -> ID .)
    POR             reduce using rule 33 (expresion -> ID .)
    DIVIDIDO        reduce using rule 33 (expresion -> ID .)
    MODULO          reduce using rule 33 (expresion -> ID .)
    IGUALQUE        reduce using rule 33 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 33 (expresion -> ID .)
    MENORQUE        reduce using rule 33 (expresion -> ID .)
    MAYORQUE        reduce using rule 33 (expresion -> ID .)
    MENORIQUE       reduce using rule 33 (expresion -> ID .)
    MAYORIQUE       reduce using rule 33 (expresion -> ID .)
    OR              reduce using rule 33 (expresion -> ID .)
    AND             reduce using rule 33 (expresion -> ID .)
    LLAVEDER        reduce using rule 33 (expresion -> ID .)
    PTCOMA          reduce using rule 33 (expresion -> ID .)
    IGUAL           shift and go to state 19


state 153

    (17) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (64) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 160
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 154

    (23) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (70) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 161
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 155

    (70) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 162
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 156

    (50) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    tipo                           shift and go to state 34
    expresion                      shift and go to state 163
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    if_asig                        shift and go to state 37

state 157

    (51) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    tipo                           shift and go to state 34
    expresion                      shift and go to state 164
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    if_asig                        shift and go to state 37

state 158

    (24) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 24 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 159

    (71) else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    FN              reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LET             reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PRINTLN         reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    ID              reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IF              reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 71 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 160

    (17) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (18) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (64) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 165
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 161

    (23) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (70) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (72) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (73) bloque_expresion -> . expresion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (12) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID IGUAL expresion PTCOMA
    (10) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (16) asignacion -> . ID IGUAL expresion PTCOMA
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 152
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    LET             shift and go to state 10
    PRINTLN         shift and go to state 12
    IF              shift and go to state 153
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43

    expresion                      shift and go to state 104
    instrucciones                  shift and go to state 166
    bloque_expresion               shift and go to state 167
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 162

    (70) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 168
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 163

    (50) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    PARDER          shift and go to state 169
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 164

    (51) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (45) expresion -> expresion . MAS expresion
    (46) expresion -> expresion . MENOS expresion
    (47) expresion -> expresion . POR expresion
    (48) expresion -> expresion . DIVIDIDO expresion
    (49) expresion -> expresion . MODULO expresion
    (52) expresion -> expresion . IGUALQUE expresion
    (53) expresion -> expresion . NOIGUALQUE expresion
    (54) expresion -> expresion . MENORQUE expresion
    (55) expresion -> expresion . MAYORQUE expresion
    (56) expresion -> expresion . MENORIQUE expresion
    (57) expresion -> expresion . MAYORIQUE expresion
    (58) expresion -> expresion . OR expresion
    (59) expresion -> expresion . AND expresion

    PARDER          shift and go to state 170
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    MODULO          shift and go to state 56
    IGUALQUE        shift and go to state 57
    NOIGUALQUE      shift and go to state 58
    MENORQUE        shift and go to state 59
    MAYORQUE        shift and go to state 60
    MENORIQUE       shift and go to state 61
    MAYORIQUE       shift and go to state 62
    OR              shift and go to state 63
    AND             shift and go to state 64


state 165

    (17) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (18) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (19) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (20) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (64) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (65) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER else
    (66) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif
    (67) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif else
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (72) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (73) bloque_expresion -> . expresion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (12) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID IGUAL expresion PTCOMA
    (10) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (16) asignacion -> . ID IGUAL expresion PTCOMA
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 152
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    LET             shift and go to state 10
    PRINTLN         shift and go to state 12
    IF              shift and go to state 153
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43

    expresion                      shift and go to state 104
    instrucciones                  shift and go to state 79
    bloque_expresion               shift and go to state 105
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 166

    (23) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (12) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (13) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID IGUAL expresion PTCOMA
    (10) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (16) asignacion -> . ID IGUAL expresion PTCOMA
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    LLAVEDER        shift and go to state 171
    LET             shift and go to state 10
    PRINTLN         shift and go to state 12
    ID              shift and go to state 11
    IF              shift and go to state 13

    instruccion                    shift and go to state 15
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9

state 167

    (70) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (72) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 172
    PTCOMA          shift and go to state 119


state 168

    (70) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (72) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (73) bloque_expresion -> . expresion
    (33) expresion -> . ID
    (34) expresion -> . ENTERO
    (35) expresion -> . DECIMAL
    (36) expresion -> . TRUE
    (37) expresion -> . FALSE
    (38) expresion -> . tostring
    (39) expresion -> . toowned
    (42) expresion -> . STR
    (43) expresion -> . CADENA
    (44) expresion -> . CARACTER
    (45) expresion -> . expresion MAS expresion
    (46) expresion -> . expresion MENOS expresion
    (47) expresion -> . expresion POR expresion
    (48) expresion -> . expresion DIVIDIDO expresion
    (49) expresion -> . expresion MODULO expresion
    (50) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (51) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (52) expresion -> . expresion IGUALQUE expresion
    (53) expresion -> . expresion NOIGUALQUE expresion
    (54) expresion -> . expresion MENORQUE expresion
    (55) expresion -> . expresion MAYORQUE expresion
    (56) expresion -> . expresion MENORIQUE expresion
    (57) expresion -> . expresion MAYORIQUE expresion
    (58) expresion -> . expresion OR expresion
    (59) expresion -> . expresion AND expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . NOT expresion
    (62) expresion -> . PARIZQ expresion PARDER
    (63) expresion -> . if_asig
    (40) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (41) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (25) tipo -> . I64
    (26) tipo -> . F64
    (27) tipo -> . BOOL
    (28) tipo -> . CHAR
    (29) tipo -> . STRING
    (30) tipo -> . SIGNOI STR
    (64) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (65) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (66) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (67) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    STR             shift and go to state 30
    CADENA          shift and go to state 31
    CARACTER        shift and go to state 32
    MENOS           shift and go to state 33
    NOT             shift and go to state 36
    PARIZQ          shift and go to state 35
    I64             shift and go to state 38
    F64             shift and go to state 39
    BOOL            shift and go to state 40
    CHAR            shift and go to state 41
    STRING          shift and go to state 42
    SIGNOI          shift and go to state 43
    IF              shift and go to state 21

    expresion                      shift and go to state 104
    bloque_expresion               shift and go to state 167
    tostring                       shift and go to state 28
    toowned                        shift and go to state 29
    tipo                           shift and go to state 34
    if_asig                        shift and go to state 37

state 169

    (50) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 50 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 170

    (51) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 51 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 171

    (23) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 23 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 172

    (70) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    FN              reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LET             reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PRINTLN         reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ID              reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IF              reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 70 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 123 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 138 resolved as shift
