
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGUALQUENOIGUALQUEMENORQUEMENORIQUEMAYORQUEMAYORIQUEleftMASMENOSleftDIVIDIDOPORMODULOleftASleftUMENOSNOTAND AS BOOL CADENA CARACTER CHAR COMA DECIMAL DIVIDIDO DOSPT ENTERO EX F64 FALSE FN I64 ID IGUAL IGUALQUE LET LLAVEDER LLAVEIZQ MAIN MAS MAYORIQUE MAYORQUE MENORIQUE MENORQUE MENOS MODULO MUT NOIGUALQUE NOT OR PARDER PARIZQ POR POW POWF PRINTLN PTCOMA PTO SIGNOI STR STRING TOOWNED TOSTRING TRUEinicio : instrucciones maininicio : mainmain : FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDERinstrucciones : instrucciones instruccioninstrucciones : instruccioninstruccion : declaracion\n                    | imprimir\n                    | asignacion\n    imprimir : PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMAimprimir : PRINTLN EX PARIZQ expresion PARDER PTCOMAdeclaracion : LET MUT ID DOSPT tipo IGUAL expresion PTCOMAdeclaracion : LET MUT ID IGUAL expresion PTCOMAdeclaracion : LET ID DOSPT tipo IGUAL expresion PTCOMAdeclaracion : LET ID IGUAL expresion PTCOMAasignacion : ID IGUAL expresion PTCOMAtipo : I64\n            | F64\n            | BOOL\n            | CHAR\n            | STRING\n    tipo : SIGNOI STR expresiones : expresiones COMA expresionexpresiones : expresionexpresion : IDexpresion : ENTEROexpresion : DECIMALexpresion : TRUEexpresion : FALSEexpresion : tostring\n                | toownedtostring : CADENA PTO TOSTRING PARIZQ PARDER toowned : CADENA PTO TOOWNED PARIZQ PARDER expresion : STRexpresion : CADENAexpresion : CARACTERexpresion : expresion MAS expresion\n                    | expresion MENOS expresion\n                    | expresion POR expresion\n                    | expresion DIVIDIDO expresion\n                    | expresion MODULO expresionexpresion : tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER\n                | tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDERexpresion : expresion IGUALQUE expresion\n            | expresion NOIGUALQUE expresion\n            | expresion MENORQUE expresion\n            | expresion MAYORQUE expresion\n            | expresion MENORIQUE expresion\n            | expresion MAYORIQUE expresion expresion : MENOS expresion %prec UMENOS\n                | NOT expresion'
    
_lr_action_items = {'FN':([0,2,4,6,7,8,13,49,71,90,98,101,108,112,],[5,5,-5,-6,-7,-8,-4,-15,-14,-12,-10,-13,-11,-9,]),'LET':([0,2,4,6,7,8,13,49,67,71,88,90,98,101,108,112,],[9,9,-5,-6,-7,-8,-4,-15,9,-14,9,-12,-10,-13,-11,-9,]),'PRINTLN':([0,2,4,6,7,8,13,49,67,71,88,90,98,101,108,112,],[11,11,-5,-6,-7,-8,-4,-15,11,-14,11,-12,-10,-13,-11,-9,]),'ID':([0,2,4,6,7,8,9,13,15,17,22,34,36,43,46,49,50,51,52,53,54,55,56,57,58,59,60,67,70,71,86,88,89,90,98,101,104,105,106,108,112,113,114,],[10,10,-5,-6,-7,-8,16,-4,20,23,23,23,23,23,23,-15,23,23,23,23,23,23,23,23,23,23,23,10,23,-14,23,10,23,-12,-10,-13,23,23,23,-11,-9,23,23,]),'$end':([1,3,12,99,],[0,-2,-1,-3,]),'LLAVEDER':([4,6,7,8,13,49,71,88,90,98,101,108,112,],[-5,-6,-7,-8,-4,-15,-14,99,-12,-10,-13,-11,-9,]),'MAIN':([5,],[14,]),'MUT':([9,],[15,]),'IGUAL':([10,16,20,37,38,39,40,41,47,65,68,],[17,22,46,-16,-17,-18,-19,-20,70,-21,89,]),'EX':([11,],[18,]),'PARIZQ':([14,18,83,84,94,95,],[19,43,92,93,104,105,]),'DOSPT':([16,20,35,37,38,39,40,41,63,65,],[21,45,63,-16,-17,-18,-19,-20,85,-21,]),'ENTERO':([17,22,34,36,43,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'DECIMAL':([17,22,34,36,43,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TRUE':([17,22,34,36,43,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'FALSE':([17,22,34,36,43,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'STR':([17,22,34,36,42,43,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[31,31,31,31,65,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'CADENA':([17,22,34,36,43,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'CARACTER':([17,22,34,36,43,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'MENOS':([17,22,23,24,25,26,27,28,29,30,31,32,33,34,36,43,46,48,50,51,52,53,54,55,56,57,58,59,60,62,64,66,69,70,72,73,74,75,76,77,78,79,80,81,82,86,89,91,96,100,102,103,104,105,106,109,110,111,113,114,115,116,117,118,],[34,34,-24,51,-25,-26,-27,-28,-29,-30,-33,-34,-35,34,34,34,34,51,34,34,34,34,34,34,34,34,34,34,34,-49,-50,51,51,34,-36,-37,-38,-39,-40,51,51,51,51,51,51,34,34,51,51,51,-31,-32,34,34,34,51,51,51,34,34,51,51,-41,-42,]),'NOT':([17,22,34,36,43,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'I64':([17,21,22,34,36,43,45,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'F64':([17,21,22,34,36,43,45,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'BOOL':([17,21,22,34,36,43,45,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'CHAR':([17,21,22,34,36,43,45,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'STRING':([17,21,22,34,36,43,45,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'SIGNOI':([17,21,22,34,36,43,45,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'PARDER':([19,23,25,26,27,28,29,30,31,32,33,62,64,66,72,73,74,75,76,77,78,79,80,81,82,92,93,96,97,102,103,111,115,116,117,118,],[44,-24,-25,-26,-27,-28,-29,-30,-33,-34,-35,-49,-50,87,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,102,103,-23,107,-31,-32,-22,117,118,-41,-42,]),'PTCOMA':([23,24,25,26,27,28,29,30,31,32,33,48,62,64,69,72,73,74,75,76,77,78,79,80,81,82,87,91,100,102,103,107,117,118,],[-24,49,-25,-26,-27,-28,-29,-30,-33,-34,-35,71,-49,-50,90,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,98,101,108,-31,-32,112,-41,-42,]),'MAS':([23,24,25,26,27,28,29,30,31,32,33,48,62,64,66,69,72,73,74,75,76,77,78,79,80,81,82,91,96,100,102,103,109,110,111,115,116,117,118,],[-24,50,-25,-26,-27,-28,-29,-30,-33,-34,-35,50,-49,-50,50,50,-36,-37,-38,-39,-40,50,50,50,50,50,50,50,50,50,-31,-32,50,50,50,50,50,-41,-42,]),'POR':([23,24,25,26,27,28,29,30,31,32,33,48,62,64,66,69,72,73,74,75,76,77,78,79,80,81,82,91,96,100,102,103,109,110,111,115,116,117,118,],[-24,52,-25,-26,-27,-28,-29,-30,-33,-34,-35,52,-49,-50,52,52,52,52,-38,-39,-40,52,52,52,52,52,52,52,52,52,-31,-32,52,52,52,52,52,-41,-42,]),'DIVIDIDO':([23,24,25,26,27,28,29,30,31,32,33,48,62,64,66,69,72,73,74,75,76,77,78,79,80,81,82,91,96,100,102,103,109,110,111,115,116,117,118,],[-24,53,-25,-26,-27,-28,-29,-30,-33,-34,-35,53,-49,-50,53,53,53,53,-38,-39,-40,53,53,53,53,53,53,53,53,53,-31,-32,53,53,53,53,53,-41,-42,]),'MODULO':([23,24,25,26,27,28,29,30,31,32,33,48,62,64,66,69,72,73,74,75,76,77,78,79,80,81,82,91,96,100,102,103,109,110,111,115,116,117,118,],[-24,54,-25,-26,-27,-28,-29,-30,-33,-34,-35,54,-49,-50,54,54,54,54,-38,-39,-40,54,54,54,54,54,54,54,54,54,-31,-32,54,54,54,54,54,-41,-42,]),'IGUALQUE':([23,24,25,26,27,28,29,30,31,32,33,48,62,64,66,69,72,73,74,75,76,77,78,79,80,81,82,91,96,100,102,103,109,110,111,115,116,117,118,],[-24,55,-25,-26,-27,-28,-29,-30,-33,-34,-35,55,-49,-50,55,55,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,55,55,55,-31,-32,55,55,55,55,55,-41,-42,]),'NOIGUALQUE':([23,24,25,26,27,28,29,30,31,32,33,48,62,64,66,69,72,73,74,75,76,77,78,79,80,81,82,91,96,100,102,103,109,110,111,115,116,117,118,],[-24,56,-25,-26,-27,-28,-29,-30,-33,-34,-35,56,-49,-50,56,56,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,56,56,56,-31,-32,56,56,56,56,56,-41,-42,]),'MENORQUE':([23,24,25,26,27,28,29,30,31,32,33,48,62,64,66,69,72,73,74,75,76,77,78,79,80,81,82,91,96,100,102,103,109,110,111,115,116,117,118,],[-24,57,-25,-26,-27,-28,-29,-30,-33,-34,-35,57,-49,-50,57,57,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,57,57,57,-31,-32,57,57,57,57,57,-41,-42,]),'MAYORQUE':([23,24,25,26,27,28,29,30,31,32,33,48,62,64,66,69,72,73,74,75,76,77,78,79,80,81,82,91,96,100,102,103,109,110,111,115,116,117,118,],[-24,58,-25,-26,-27,-28,-29,-30,-33,-34,-35,58,-49,-50,58,58,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,58,58,58,-31,-32,58,58,58,58,58,-41,-42,]),'MENORIQUE':([23,24,25,26,27,28,29,30,31,32,33,48,62,64,66,69,72,73,74,75,76,77,78,79,80,81,82,91,96,100,102,103,109,110,111,115,116,117,118,],[-24,59,-25,-26,-27,-28,-29,-30,-33,-34,-35,59,-49,-50,59,59,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,59,59,59,-31,-32,59,59,59,59,59,-41,-42,]),'MAYORIQUE':([23,24,25,26,27,28,29,30,31,32,33,48,62,64,66,69,72,73,74,75,76,77,78,79,80,81,82,91,96,100,102,103,109,110,111,115,116,117,118,],[-24,60,-25,-26,-27,-28,-29,-30,-33,-34,-35,60,-49,-50,60,60,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,60,60,60,-31,-32,60,60,60,60,60,-41,-42,]),'COMA':([23,25,26,27,28,29,30,31,32,33,62,64,66,72,73,74,75,76,77,78,79,80,81,82,96,97,102,103,109,110,111,117,118,],[-24,-25,-26,-27,-28,-29,-30,-33,-34,-35,-49,-50,86,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-23,106,-31,-32,113,114,-22,-41,-42,]),'PTO':([32,],[61,]),'LLAVEIZQ':([44,],[67,]),'TOSTRING':([61,],[83,]),'TOOWNED':([61,],[84,]),'POW':([85,],[94,]),'POWF':([85,],[95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,67,],[2,88,]),'main':([0,2,],[3,12,]),'instruccion':([0,2,67,88,],[4,13,4,13,]),'declaracion':([0,2,67,88,],[6,6,6,6,]),'imprimir':([0,2,67,88,],[7,7,7,7,]),'asignacion':([0,2,67,88,],[8,8,8,8,]),'expresion':([17,22,34,36,43,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[24,48,62,64,66,69,72,73,74,75,76,77,78,79,80,81,82,91,96,100,109,110,111,115,116,]),'tostring':([17,22,34,36,43,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'toowned':([17,22,34,36,43,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'tipo':([17,21,22,34,36,43,45,46,50,51,52,53,54,55,56,57,58,59,60,70,86,89,104,105,106,113,114,],[35,47,35,35,35,35,68,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'expresiones':([86,],[97,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones main','inicio',2,'p_inicio1','Sintactico.py',33),
  ('inicio -> main','inicio',1,'p_inicio2','Sintactico.py',42),
  ('main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER','main',7,'p_main','Sintactico.py',48),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones1','Sintactico.py',53),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones2','Sintactico.py',60),
  ('instruccion -> declaracion','instruccion',1,'p_instrucion','Sintactico.py',66),
  ('instruccion -> imprimir','instruccion',1,'p_instrucion','Sintactico.py',67),
  ('instruccion -> asignacion','instruccion',1,'p_instrucion','Sintactico.py',68),
  ('imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA','imprimir',8,'p_imprimir1','Sintactico.py',76),
  ('imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA','imprimir',6,'p_imprimir2','Sintactico.py',81),
  ('declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA','declaracion',8,'p_declaracion1','Sintactico.py',88),
  ('declaracion -> LET MUT ID IGUAL expresion PTCOMA','declaracion',6,'p_declaracion2','Sintactico.py',93),
  ('declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA','declaracion',7,'p_declaracion3','Sintactico.py',98),
  ('declaracion -> LET ID IGUAL expresion PTCOMA','declaracion',5,'p_declaracion4','Sintactico.py',103),
  ('asignacion -> ID IGUAL expresion PTCOMA','asignacion',4,'p_asignacion1','Sintactico.py',109),
  ('tipo -> I64','tipo',1,'p_tipo1','Sintactico.py',116),
  ('tipo -> F64','tipo',1,'p_tipo1','Sintactico.py',117),
  ('tipo -> BOOL','tipo',1,'p_tipo1','Sintactico.py',118),
  ('tipo -> CHAR','tipo',1,'p_tipo1','Sintactico.py',119),
  ('tipo -> STRING','tipo',1,'p_tipo1','Sintactico.py',120),
  ('tipo -> SIGNOI STR','tipo',2,'p_tipo2','Sintactico.py',136),
  ('expresiones -> expresiones COMA expresion','expresiones',3,'p_expresiones1','Sintactico.py',142),
  ('expresiones -> expresion','expresiones',1,'p_expresiones2','Sintactico.py',148),
  ('expresion -> ID','expresion',1,'p_expresion_id','Sintactico.py',153),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','Sintactico.py',158),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_decimal','Sintactico.py',163),
  ('expresion -> TRUE','expresion',1,'p_expresion_true','Sintactico.py',168),
  ('expresion -> FALSE','expresion',1,'p_expresion_false','Sintactico.py',173),
  ('expresion -> tostring','expresion',1,'p_expresion_to','Sintactico.py',178),
  ('expresion -> toowned','expresion',1,'p_expresion_to','Sintactico.py',179),
  ('tostring -> CADENA PTO TOSTRING PARIZQ PARDER','tostring',5,'p_expresion_tostring','Sintactico.py',184),
  ('toowned -> CADENA PTO TOOWNED PARIZQ PARDER','toowned',5,'p_expresion_toowned','Sintactico.py',189),
  ('expresion -> STR','expresion',1,'p_expresion_cadena2','Sintactico.py',194),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena1','Sintactico.py',199),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','Sintactico.py',204),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica1','Sintactico.py',209),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica1','Sintactico.py',210),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_aritmetica1','Sintactico.py',211),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_aritmetica1','Sintactico.py',212),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_aritmetica1','Sintactico.py',213),
  ('expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER','expresion',9,'p_expresion_aritmetica2','Sintactico.py',229),
  ('expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER','expresion',9,'p_expresion_aritmetica2','Sintactico.py',230),
  ('expresion -> expresion IGUALQUE expresion','expresion',3,'p_expresion_relacional','Sintactico.py',242),
  ('expresion -> expresion NOIGUALQUE expresion','expresion',3,'p_expresion_relacional','Sintactico.py',243),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_relacional','Sintactico.py',244),
  ('expresion -> expresion MAYORQUE expresion','expresion',3,'p_expresion_relacional','Sintactico.py',245),
  ('expresion -> expresion MENORIQUE expresion','expresion',3,'p_expresion_relacional','Sintactico.py',246),
  ('expresion -> expresion MAYORIQUE expresion','expresion',3,'p_expresion_relacional','Sintactico.py',247),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_unaria','Sintactico.py',255),
  ('expresion -> NOT expresion','expresion',2,'p_exp_unaria','Sintactico.py',256),
]
