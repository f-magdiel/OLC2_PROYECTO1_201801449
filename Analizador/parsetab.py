
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL CADENA CARACTER CHAR COMA DECIMAL DOSPT ENTERO EX F64 FALSE FN I64 ID IGUAL LET LLAVEDER LLAVEIZQ MAIN MUT PARDER PARIZQ PRINTLN PTCOMA PTO SIGNOI STR STRING TOOWNED TOSTRING TRUEinicio : instrucciones maininicio : mainmain : FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDERinstrucciones : instrucciones instruccioninstrucciones : instruccioninstruccion : declaracion\n                    | imprimir\n                    | asignacion\n    imprimir : PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMAimprimir : PRINTLN EX PARIZQ expresion PARDER PTCOMAdeclaracion : LET MUT ID DOSPT tipo IGUAL expresion PTCOMAdeclaracion : LET MUT ID IGUAL expresion PTCOMAdeclaracion : LET ID DOSPT tipo IGUAL expresion PTCOMAdeclaracion : LET ID IGUAL expresion PTCOMAasignacion : ID IGUAL expresion PTCOMAtipo : I64\n            | F64\n            | BOOL\n            | CHAR\n            | STRING\n    tipo : SIGNOI STR expresiones : expresiones COMA expresionexpresiones : expresionexpresion : IDexpresion : ENTEROexpresion : DECIMALexpresion : TRUEexpresion : FALSEexpresion : tostring\n                | toownedtostring : CADENA PTO TOSTRING PARIZQ PARDER toowned : CADENA PTO TOOWNED PARIZQ PARDER expresion : STRexpresion : CADENAexpresion : CARACTER'
    
_lr_action_items = {'FN':([0,2,4,6,7,8,13,46,54,61,67,70,75,77,],[5,5,-5,-6,-7,-8,-4,-15,-14,-12,-10,-13,-11,-9,]),'LET':([0,2,4,6,7,8,13,46,49,54,59,61,67,70,75,77,],[9,9,-5,-6,-7,-8,-4,-15,9,-14,9,-12,-10,-13,-11,-9,]),'PRINTLN':([0,2,4,6,7,8,13,46,49,54,59,61,67,70,75,77,],[11,11,-5,-6,-7,-8,-4,-15,11,-14,11,-12,-10,-13,-11,-9,]),'ID':([0,2,4,6,7,8,9,13,15,17,22,34,37,46,49,52,54,57,59,60,61,67,70,73,75,77,],[10,10,-5,-6,-7,-8,16,-4,20,23,23,23,23,-15,10,23,-14,23,10,23,-12,-10,-13,23,-11,-9,]),'$end':([1,3,12,68,],[0,-2,-1,-3,]),'LLAVEDER':([4,6,7,8,13,46,54,59,61,67,70,75,77,],[-5,-6,-7,-8,-4,-15,-14,68,-12,-10,-13,-11,-9,]),'MAIN':([5,],[14,]),'MUT':([9,],[15,]),'IGUAL':([10,16,20,38,39,40,41,42,43,50,53,],[17,22,37,52,-16,-17,-18,-19,-20,60,-21,]),'EX':([11,],[18,]),'PARIZQ':([14,18,55,56,],[19,34,63,64,]),'DOSPT':([16,20,],[21,36,]),'ENTERO':([17,22,34,37,52,57,60,73,],[25,25,25,25,25,25,25,25,]),'DECIMAL':([17,22,34,37,52,57,60,73,],[26,26,26,26,26,26,26,26,]),'TRUE':([17,22,34,37,52,57,60,73,],[27,27,27,27,27,27,27,27,]),'FALSE':([17,22,34,37,52,57,60,73,],[28,28,28,28,28,28,28,28,]),'STR':([17,22,34,37,44,52,57,60,73,],[31,31,31,31,53,31,31,31,31,]),'CADENA':([17,22,34,37,52,57,60,73,],[32,32,32,32,32,32,32,32,]),'CARACTER':([17,22,34,37,52,57,60,73,],[33,33,33,33,33,33,33,33,]),'PARDER':([19,23,25,26,27,28,29,30,31,32,33,48,63,64,65,66,71,72,76,],[35,-24,-25,-26,-27,-28,-29,-30,-33,-34,-35,58,71,72,-23,74,-31,-32,-22,]),'I64':([21,36,],[39,39,]),'F64':([21,36,],[40,40,]),'BOOL':([21,36,],[41,41,]),'CHAR':([21,36,],[42,42,]),'STRING':([21,36,],[43,43,]),'SIGNOI':([21,36,],[44,44,]),'PTCOMA':([23,24,25,26,27,28,29,30,31,32,33,45,51,58,62,69,71,72,74,],[-24,46,-25,-26,-27,-28,-29,-30,-33,-34,-35,54,61,67,70,75,-31,-32,77,]),'COMA':([23,25,26,27,28,29,30,31,32,33,48,65,66,71,72,76,],[-24,-25,-26,-27,-28,-29,-30,-33,-34,-35,57,-23,73,-31,-32,-22,]),'PTO':([32,],[47,]),'LLAVEIZQ':([35,],[49,]),'TOSTRING':([47,],[55,]),'TOOWNED':([47,],[56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,49,],[2,59,]),'main':([0,2,],[3,12,]),'instruccion':([0,2,49,59,],[4,13,4,13,]),'declaracion':([0,2,49,59,],[6,6,6,6,]),'imprimir':([0,2,49,59,],[7,7,7,7,]),'asignacion':([0,2,49,59,],[8,8,8,8,]),'expresion':([17,22,34,37,52,57,60,73,],[24,45,48,51,62,65,69,76,]),'tostring':([17,22,34,37,52,57,60,73,],[29,29,29,29,29,29,29,29,]),'toowned':([17,22,34,37,52,57,60,73,],[30,30,30,30,30,30,30,30,]),'tipo':([21,36,],[38,50,]),'expresiones':([57,],[66,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones main','inicio',2,'p_inicio1','Sintactico.py',14),
  ('inicio -> main','inicio',1,'p_inicio2','Sintactico.py',23),
  ('main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER','main',7,'p_main','Sintactico.py',29),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones1','Sintactico.py',34),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones2','Sintactico.py',41),
  ('instruccion -> declaracion','instruccion',1,'p_instrucion','Sintactico.py',47),
  ('instruccion -> imprimir','instruccion',1,'p_instrucion','Sintactico.py',48),
  ('instruccion -> asignacion','instruccion',1,'p_instrucion','Sintactico.py',49),
  ('imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA','imprimir',8,'p_imprimir1','Sintactico.py',57),
  ('imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA','imprimir',6,'p_imprimir2','Sintactico.py',62),
  ('declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA','declaracion',8,'p_declaracion1','Sintactico.py',69),
  ('declaracion -> LET MUT ID IGUAL expresion PTCOMA','declaracion',6,'p_declaracion2','Sintactico.py',74),
  ('declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA','declaracion',7,'p_declaracion3','Sintactico.py',79),
  ('declaracion -> LET ID IGUAL expresion PTCOMA','declaracion',5,'p_declaracion4','Sintactico.py',84),
  ('asignacion -> ID IGUAL expresion PTCOMA','asignacion',4,'p_asignacion1','Sintactico.py',90),
  ('tipo -> I64','tipo',1,'p_tipo1','Sintactico.py',97),
  ('tipo -> F64','tipo',1,'p_tipo1','Sintactico.py',98),
  ('tipo -> BOOL','tipo',1,'p_tipo1','Sintactico.py',99),
  ('tipo -> CHAR','tipo',1,'p_tipo1','Sintactico.py',100),
  ('tipo -> STRING','tipo',1,'p_tipo1','Sintactico.py',101),
  ('tipo -> SIGNOI STR','tipo',2,'p_tipo2','Sintactico.py',117),
  ('expresiones -> expresiones COMA expresion','expresiones',3,'p_expresiones1','Sintactico.py',123),
  ('expresiones -> expresion','expresiones',1,'p_expresiones2','Sintactico.py',129),
  ('expresion -> ID','expresion',1,'p_expresion_id','Sintactico.py',134),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','Sintactico.py',139),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_decimal','Sintactico.py',144),
  ('expresion -> TRUE','expresion',1,'p_expresion_true','Sintactico.py',149),
  ('expresion -> FALSE','expresion',1,'p_expresion_false','Sintactico.py',154),
  ('expresion -> tostring','expresion',1,'p_expresion_to','Sintactico.py',159),
  ('expresion -> toowned','expresion',1,'p_expresion_to','Sintactico.py',160),
  ('tostring -> CADENA PTO TOSTRING PARIZQ PARDER','tostring',5,'p_expresion_tostring','Sintactico.py',165),
  ('toowned -> CADENA PTO TOOWNED PARIZQ PARDER','toowned',5,'p_expresion_toowned','Sintactico.py',170),
  ('expresion -> STR','expresion',1,'p_expresion_cadena2','Sintactico.py',175),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena1','Sintactico.py',180),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','Sintactico.py',185),
]
